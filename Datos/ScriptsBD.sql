USE [CSUR]
GO
/****** Object:  Table [dbo].[TA_ESTADOASIENTO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_ESTADOASIENTO](
	[INT_CODIGOESTASIENTO] [int] NOT NULL,
	[VCH_DETESTASIENTO] [nvarchar](20) NOT NULL,
 CONSTRAINT [PK_TA_ESTADOASIENTO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOESTASIENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTAUTIL]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_LISTAUTIL] 
(@CHR_TIPO_UTIL AS CHAR(1),
@CHR_ENTIDAD_UTIL AS CHAR(2))
AS
BEGIN

IF(@CHR_ENTIDAD_UTIL = 'ES')
	EXEC('SELECT CHR_ESTADO CHR_UTIL, VCH_NOMBRE FROM TA_ESTADO WHERE CHR_TIPO=''' + @CHR_TIPO_UTIL + ''' ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'UD')
EXEC('SELECT INT_CODIGO_UBIGEO CHR_UTIL, VCH_NOMBRE FROM TA_UBIGEO WHERE VCH_CODIGO_PROVINCIA=''000'' AND VCH_CODIGO_DISTRITO=''000'' ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'TC')
EXEC('SELECT INT_TIPO_CARGA CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_CARGA ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'TP')
EXEC('SELECT INT_TIPO_PAGO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_PAGO ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'TM')
EXEC('SELECT INT_TIPO_MOVIMIENTO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_MOVIMIENTO ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'TS')
EXEC('SELECT INT_TIPO_SERVICIO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_SERVICIO ORDER BY VCH_NOMBRE')

IF(@CHR_ENTIDAD_UTIL = 'TT')
EXEC('SELECT INT_TIPO_TRANSPORTE CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_SERVICIO ORDER BY VCH_NOMBRE')

END
GO
/****** Object:  Table [dbo].[TA_CAPACITACIONES]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_CAPACITACIONES](
	[INT_CODIGOCAPACITACION] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NULL,
	[INT_DURACION] [int] NOT NULL,
 CONSTRAINT [PK_dbo.TA_CAPACITACIONES] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOCAPACITACION] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_AREAS]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_AREAS](
	[INT_CODIGOAREA] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_AREAS] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOAREA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_BUSCAUTILXCODIGO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_BUSCAUTILXCODIGO] 
(@CHR_CODIGO AS VARCHAR(5),
@CHR_ENTIDAD_UTIL AS CHAR(2))
AS
BEGIN

IF(@CHR_ENTIDAD_UTIL = 'ES')
	EXEC('SELECT CHR_ESTADO CHR_UTIL, VCH_NOMBRE FROM TA_ESTADO WHERE CHR_ESTADO=''' + @CHR_CODIGO + '''')

IF(@CHR_ENTIDAD_UTIL = 'UD')
EXEC('SELECT INT_CODIGO_UBIGEO CHR_UTIL, VCH_NOMBRE FROM TA_UBIGEO WHERE INT_CODIGO_UBIGEO=' + @CHR_CODIGO)

IF(@CHR_ENTIDAD_UTIL = 'TC')
EXEC('SELECT INT_TIPO_CARGA CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_CARGA WHERE INT_TIPO_CARGA=' + @CHR_CODIGO)

IF(@CHR_ENTIDAD_UTIL = 'TP')
EXEC('SELECT INT_TIPO_PAGO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_PAGO WHERE INT_TIPO_PAGO=' + @CHR_CODIGO)

IF(@CHR_ENTIDAD_UTIL = 'TM')
EXEC('SELECT INT_TIPO_MOVIMIENTO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_MOVIMIENTO WHERE INT_TIPO_MOVIMIENTO=' + @CHR_CODIGO)

IF(@CHR_ENTIDAD_UTIL = 'TS')
EXEC('SELECT INT_TIPO_SERVICIO CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_SERVICIO WHERE INT_TIPO_SERVICIO=' + @CHR_CODIGO)

IF(@CHR_ENTIDAD_UTIL = 'TT')
EXEC('SELECT INT_TIPO_TRANSPORTE CHR_UTIL, VCH_NOMBRE FROM TA_TIPO_SERVICIO WHERE INT_TIPO_TRANSPORTE=' + @CHR_CODIGO)

END
GO
/****** Object:  StoredProcedure [dbo].[SP_BUSCACLIENTEXDNI]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_BUSCACLIENTEXDNI]
(@VCH_DOCUMENTO AS VARCHAR(15))
AS
BEGIN
EXEC('SELECT VCH_DOCUMENTO,VCH_NOMBRES,VCH_APELLIDOS,VCH_DIRECCION,VCH_CORREO,VCH_RUTA_FOTO,VCH_TELEFONO,INT_UBIGEO
FROM TA_CLIENTE WHERE VCH_DOCUMENTO = ''' + @VCH_DOCUMENTO + '''')
END
GO
/****** Object:  Table [dbo].[AuditEntry]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AuditEntry](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Table] [nvarchar](max) NULL,
	[EventType] [nvarchar](max) NULL,
	[UserName] [nvarchar](max) NULL,
	[EventTime] [datetime] NOT NULL,
	[RecordId] [int] NOT NULL,
 CONSTRAINT [PK_dbo.AuditEntry] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[__MigrationHistory]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[__MigrationHistory](
	[MigrationId] [nvarchar](150) NOT NULL,
	[ContextKey] [nvarchar](300) NOT NULL,
	[Model] [varbinary](max) NOT NULL,
	[ProductVersion] [nvarchar](32) NOT NULL,
 CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY CLUSTERED 
(
	[MigrationId] ASC,
	[ContextKey] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTACARGASXFILTROS]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_LISTACARGASXFILTROS]

(@VCH_NOM_CLIENTE AS VARCHAR(200),

@DTM_FECHA_DESDE AS DATETIME,

@DTM_FECHA_HASTA AS DATETIME,

@CHR_ESTADO AS CHAR(2))

AS

BEGIN

DECLARE @SQL_WHERE AS VARCHAR(255)

SET @SQL_WHERE = ''



IF(LTRIM(RTRIM(@VCH_NOM_CLIENTE)) <> '')

	SET @SQL_WHERE += ' AND (L.VCH_NOMBRES LIKE ''%' + @VCH_NOM_CLIENTE + '%'' OR L.VCH_APELLIDOS LIKE ''%' + @VCH_NOM_CLIENTE + '%'')'



IF(LTRIM(RTRIM(@CHR_ESTADO)) <> '')

	SET @SQL_WHERE += ' AND C.CHR_ESTADO = ''' + @CHR_ESTADO + ''''

	

IF(DATEPART(year, @DTM_FECHA_DESDE) <> 1900 AND DATEPART(year, @DTM_FECHA_HASTA) <> 1900)

	SET @SQL_WHERE += ' AND C.DTM_FECHA_REGISTRO >= ''' + CONVERT(VARCHAR, @DTM_FECHA_DESDE, 103) + ''' AND C.DTM_FECHA_REGISTRO <= ''' + CONVERT(VARCHAR, @DTM_FECHA_HASTA , 103) + ''' '

	

EXEC('SELECT C.INT_CODIGO_CARGA,C.DTM_FECHA_REGISTRO,C.VCH_OBSERVACION,C.VCH_CODIGO_SEGURIDAD,C.DBL_PESO,C.DBL_ANCHO,C.DBL_LARGO,C.DBL_PROFUNDIDAD,C.INT_TIPO_CARGA,C.INT_TIPO_PAGO,C.INT_CODIGO_PROGRAMACION_RUTA,C.INT_CODIGO_ALMACEN,C.VCH_CLIENTE_ORIGEN,C.
INT_CODIGO_GUIA,C.CHR_ESTADO,C.VCH_CLIENTE_DESTINO 

FROM TA_CARGA C 

INNER JOIN TA_PROGRAMACION_RUTA P ON C.INT_CODIGO_PROGRAMACION_RUTA = P.INT_CODIGO_PROGRAMACION_RUTA

INNER JOIN TA_CLIENTE L ON C.VCH_CLIENTE_ORIGEN = L.VCH_DOCUMENTO

WHERE 0=0 ' + @SQL_WHERE)

END
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTACARGAENTREGADA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_LISTACARGAENTREGADA]    
(@VCH_DOC_CLIENTE AS VARCHAR(15) = NULL,    
@INT_DEPARTAMENTO AS INT = -1)    
AS    
BEGIN    
DECLARE @SQL_WHERE AS VARCHAR(255)    
    
IF(LTRIM(RTRIM(@VCH_DOC_CLIENTE)) <> '')    
 SET @SQL_WHERE = ' AND C.VCH_DOCUMENTO=''' + @VCH_DOC_CLIENTE + ''' '    
     
IF(@INT_DEPARTAMENTO <> -1)    
 SET @SQL_WHERE = ' AND R.INT_UBIGEO_ORIGEN=' + CAST(@INT_DEPARTAMENTO AS VARCHAR) + ' '    
     
EXEC('SELECT A.INT_CODIGO_CARGA, C.VCH_NOMBRES + '' '' + C.VCH_APELLIDOS CLIENTE_ORIGEN, U.VCH_NOMBRE DEPARTAMENTO,    
P.DTM_FECHA_ORIGEN,  TP.VCH_NOMBRE TIPO_PAGO    
FROM TA_CARGA A     
INNER JOIN TA_CLIENTE C ON A.VCH_CLIENTE_ORIGEN = C.VCH_DOCUMENTO    
INNER JOIN TA_PROGRAMACION_RUTA P ON A.INT_CODIGO_PROGRAMACION_RUTA = P.INT_CODIGO_PROGRAMACION_RUTA    
INNER JOIN TA_RUTA R ON P.INT_CODIGO_RUTA = R.INT_CODIGO_RUTA    
INNER JOIN TA_UBIGEO U ON U.INT_CODIGO_UBIGEO = R.INT_UBIGEO_ORIGEN    
LEFT JOIN TA_TIPO_PAGO TP ON A.INT_TIPO_PAGO = TP.INT_TIPO_PAGO WHERE A.CHR_ESTADO=''RC'' ' + @SQL_WHERE)    
END
GO
/****** Object:  Table [dbo].[TA_TIPOSOLICITUD]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPOSOLICITUD](
	[INT_TIPOSOLICITUD] [int] NOT NULL,
	[VCH_NOMBRE] [varchar](50) NULL,
 CONSTRAINT [PK_TA_TIPOSOLICITUD] PRIMARY KEY CLUSTERED 
(
	[INT_TIPOSOLICITUD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_TIPOSEDUCACION]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_TIPOSEDUCACION](
	[INT_CODIGOTIPOEDUCACION] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_TIPOSEDUCACION] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOTIPOEDUCACION] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_TIPOSDOCUMENTO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_TIPOSDOCUMENTO](
	[INT_CODIGOTIPODOCUMENTO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_TIPOSDOCUMENTO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOTIPODOCUMENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_TIPOETIQUETA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_TIPOETIQUETA](
	[INT_CODIGOETIQUETA] [int] NOT NULL,
	[VCH_NOMBREETIQUETA] [nvarchar](20) NOT NULL,
 CONSTRAINT [PK_TIPOETIQUETA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOETIQUETA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_TIPO_TRANSPORTE]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPO_TRANSPORTE](
	[INT_TIPO_TRANSPORTE] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](100) NULL,
 CONSTRAINT [PK_TA_TIPO_TRANSPORTE] PRIMARY KEY CLUSTERED 
(
	[INT_TIPO_TRANSPORTE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_TIPO_SERVICIO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPO_SERVICIO](
	[INT_CODIGOTIPOSERVICIO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](100) NULL,
 CONSTRAINT [PK_TA_TIPO_SERVICIO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOTIPOSERVICIO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_TIPO_PAGO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPO_PAGO](
	[INT_TIPO_PAGO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](100) NULL,
 CONSTRAINT [PK_TA_TIPO_PAGO] PRIMARY KEY CLUSTERED 
(
	[INT_TIPO_PAGO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_TIPO_MOVIMIENTO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPO_MOVIMIENTO](
	[INT_TIPO_MOVIMIENTO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](50) NULL,
 CONSTRAINT [PK_TA_TIPO_MOVIMIENTO] PRIMARY KEY CLUSTERED 
(
	[INT_TIPO_MOVIMIENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_TIPO_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TIPO_CARGA](
	[INT_TIPO_CARGA] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](100) NULL,
 CONSTRAINT [PK_TA_TIPO_CARGA] PRIMARY KEY CLUSTERED 
(
	[INT_TIPO_CARGA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_OBTENERPAGOXCARGA]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_OBTENERPAGOXCARGA]
(@INT_CODIGO_CARGA AS INT)
AS 
BEGIN
SELECT DBL_MONTO,DTM_FECHA_REGISTRO,CHR_ESTADO,INT_CODIGO_CARGA FROM TA_PAGO WHERE INT_CODIGO_CARGA = @INT_CODIGO_CARGA
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIMINARPAGO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ELIMINARPAGO]
(@INT_CODIGO_CARGA AS INT)
AS
BEGIN
DELETE FROM TA_PAGO WHERE INT_CODIGO_CARGA = @INT_CODIGO_CARGA
END
GO
/****** Object:  Table [dbo].[TA_INSUMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TA_INSUMO](
	[INT_CODIGO_INSUMO] [int] NOT NULL,
	[VCH_DESCRIPCION] [varchar](80) NOT NULL,
	[VCH_TIPO_UNIDAD] [varchar](60) NOT NULL,
	[DTE_FECHA_VENCIMIENTO] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_INSUMO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_INSUMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_SOLICITUDES]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDES](
	[INT_CODIGOSOLICITUD] [int] IDENTITY(1,1) NOT NULL,
	[BLN_ARCHIVADA] [bit] NOT NULL,
	[DTE_FECHAREGISTRO] [datetime] NOT NULL,
	[DTE_FECHARESOLUCION] [datetime] NULL,
	[VCH_ESTADO] [int] NOT NULL,
	[VCH_OBSERVACIONES] [nvarchar](max) NULL,
	[VCH_DETALLESRESOLUCION] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_SOLICITUDES] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOSOLICITUD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_UBIGEO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_UBIGEO](
	[VCH_CODIGO_UBIGEO] [varchar](6) NOT NULL,
	[VCH_CODIGO_DEPARTAMENTO] [varchar](50) NULL,
	[VCH_CODIGO_PROVINCIA] [varchar](50) NULL,
	[VCH_CODIGO_DISTRITO] [varchar](50) NULL,
 CONSTRAINT [PK_TA_UBIGEO] PRIMARY KEY CLUSTERED 
(
	[VCH_CODIGO_UBIGEO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_SOLICITUDFILMACION]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDFILMACION](
	[INT_SOLICITUD] [int] IDENTITY(1,1) NOT NULL,
	[CODIGO_SALIDA_BUS] [varchar](50) NULL,
	[MINUTOS_GRABACION] [int] NULL,
	[RUTA_VIDEO] [varchar](50) NULL,
	[ESTADO] [varchar](50) NULL,
 CONSTRAINT [PK_TA_SOLICITUD_FILMACION] PRIMARY KEY CLUSTERED 
(
	[INT_SOLICITUD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_ROL]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_ROL](
	[INT_CODIGO_ROL] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](50) NULL,
 CONSTRAINT [PK_TA_ROL] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_ROL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_REFRIGERIO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TA_REFRIGERIO](
	[INT_CODIGO_REFRIGERIO] [int] NOT NULL,
	[VCH_DESCRIPCION] [varchar](80) NOT NULL,
	[VCH_TIPO_UNIDAD] [varchar](60) NOT NULL,
 CONSTRAINT [PK_REFRIGERIO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_REFRIGERIO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_DET_SOLICITUDCOCINA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_DET_SOLICITUDCOCINA](
	[INT_TA_DET_SOLICITUDCOCINA] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_SOLICITUDCOCINA] [int] NOT NULL,
	[INT_CODIGO_REFRIGERIO] [int] NOT NULL,
	[INT_CANTIDAD] [int] NULL,
 CONSTRAINT [PK_SOLPRODCOCINAA] PRIMARY KEY CLUSTERED 
(
	[INT_TA_DET_SOLICITUDCOCINA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_PRODUCTO_CABINA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TA_PRODUCTO_CABINA](
	[INT_CODIGO_PRODUCTOCABINA] [int] NOT NULL,
	[VCH_DESCRIPCION] [varchar](100) NOT NULL,
	[VCH_TIPO_UNIDAD] [varchar](60) NOT NULL,
	[DTE_FECHA_VENCIMIENTO] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_PRODUCTO_CABINA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_PRODUCTOCABINA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_PRODUCTO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_PRODUCTO](
	[INT_CODIGO_PRODUCTO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](50) NULL,
	[VCH_DESCRIPCION] [varchar](100) NULL,
	[DBL_PRECIO] [decimal](18, 2) NULL,
 CONSTRAINT [PK_TA_PRODUCTO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_PRODUCTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_PERSONAS]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_PERSONAS](
	[INT_CODIGOPERSONA] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGOTIPODOCUMENTO] [int] NOT NULL,
	[VCH_NUMERODOCUMENTO] [nvarchar](max) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NOT NULL,
	[VCH_APELLIDOS] [nvarchar](max) NOT NULL,
	[DTE_FECHANACIMIENTO] [datetime] NOT NULL,
	[VCH_FOTO] [nvarchar](max) NULL,
	[VCH_DIRECCION] [nvarchar](max) NULL,
	[VCH_TELEFONO] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_PERSONAS] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOPERSONA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_PERSONA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_PERSONA](
	[INT_CODIGOPERSONA] [int] NOT NULL,
	[INT_CODIGOTIPODOCUMENTO] [int] NULL,
	[VCH_NUMERODOCUMENTO] [varchar](15) NULL,
	[VCH_APEPATPERSONA] [varchar](30) NOT NULL,
	[VCH_APEMATPERSONA] [varchar](30) NOT NULL,
	[VCH_NOMBREPERSONA] [varchar](30) NOT NULL,
	[DTE_FECHANACIMIENTO] [smalldatetime] NULL,
	[VCH_FOTO] [nchar](10) NULL,
	[VCH_DIRECCION] [varchar](50) NULL,
	[VCH_TELEFONO] [varchar](20) NULL,
	[CHR_SEXOPERSONA] [char](1) NOT NULL,
	[INT_CODIGOCARGO] [int] NULL,
	[VCH_CODIGO_UBIGEO] [varchar](6) NULL,
	[BLN_ACTIVO] [bit] NOT NULL,
 CONSTRAINT [PK_PERSONA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOPERSONA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_VEHICULO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_VEHICULO](
	[INT_VEHICULO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_PLACA] [varchar](15) NULL,
	[VCH_MARCA] [varchar](50) NULL,
	[VCH_MODELO] [varchar](50) NULL,
	[VCH_COLOR] [varchar](50) NULL,
	[INT_TIPO_TRANSPORTE] [int] NULL,
 CONSTRAINT [PK_TA_VEHICULO] PRIMARY KEY CLUSTERED 
(
	[INT_VEHICULO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIMINARPRODUCTO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ELIMINARPRODUCTO]
(@INT_CODIGO_PRODUCTO AS INT)
AS
BEGIN
DELETE FROM TA_PRODUCTO WHERE INT_CODIGO_PRODUCTO = @INT_CODIGO_PRODUCTO
END
GO
/****** Object:  StoredProcedure [dbo].[SP_INSERTARFILMACION]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_INSERTARFILMACION]
(@VCH_COD_SAL_BUS AS VARCHAR(10),
@MIN_GRAB AS INT,
@RUTA_VIDEO AS VARCHAR(50),
@ESTADO CHAR(1))
AS 
BEGIN
INSERT INTO TA_SOLICITUDFILMACION VALUES (@VCH_COD_SAL_BUS,@MIN_GRAB,@RUTA_VIDEO,@ESTADO)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTUALIZARFILMACION]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ACTUALIZARFILMACION]
(
@INT_SOL_FILM AS INT, 
@MIN_GRAB AS INT,
@RUTA_VIDEO AS VARCHAR(50),
@ESTADO AS VARCHAR(1))
AS 
BEGIN
UPDATE TA_SOLICITUDFILMACION SET ESTADO=@ESTADO,MINUTOS_GRABACION=@MIN_GRAB,RUTA_VIDEO=@RUTA_VIDEO WHERE INT_SOLICITUD = @INT_SOL_FILM
END
GO
/****** Object:  Table [dbo].[TA_AGENCIA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_AGENCIA](
	[INT_CODIGO_AGENCIA] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [varchar](100) NULL,
	[VCH_DIRECCION] [varchar](100) NULL,
	[VCH_UBIGEO_DIRECCION] [varchar](6) NOT NULL,
 CONSTRAINT [PK_TA_AGENCIA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_AGENCIA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARUNOPRODUCTO]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARUNOPRODUCTO]
@INT_CODIGO_PRODUCTO  int
as
SELECT   INT_CODIGO_PRODUCTO ,
        VCH_NOMBRE ,
        VCH_DESCRIPCION ,
        DBL_PRECIO FROM dbo.TA_PRODUCTO
WHERE INT_CODIGO_PRODUCTO =@INT_CODIGO_PRODUCTO
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARPRODUCTO]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARPRODUCTO]
@VCH_DESCRIPCION VARCHAR(60)
as
SELECT  INT_CODIGO_PRODUCTO ,
        VCH_NOMBRE ,
        VCH_DESCRIPCION ,
        DBL_PRECIO FROM dbo.TA_PRODUCTO
		WHERE VCH_DESCRIPCION LIKE '%' +  @VCH_DESCRIPCION + '%'
GO
/****** Object:  Table [dbo].[TA_CARGOS]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_CARGOS](
	[INT_CODIGOCARGO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_NOMBRE] [nvarchar](max) NULL,
	[INT_CODIGOAREA] [int] NOT NULL,
 CONSTRAINT [PK_dbo.TA_CARGOS] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOCARGO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_CLIENTE]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_CLIENTE](
	[VCH_DOCUMENTO] [varchar](15) NOT NULL,
	[VCH_NOMBRES] [varchar](100) NULL,
	[VCH_APELLIDOS] [varchar](100) NULL,
	[VCH_DIRECCION] [varchar](100) NULL,
	[VCH_CORREO] [varchar](100) NULL,
	[VCH_TELEFONO] [varchar](50) NULL,
	[VCH_UBIGEO] [varchar](6) NULL,
 CONSTRAINT [PK_TA_CLIENTE] PRIMARY KEY CLUSTERED 
(
	[VCH_DOCUMENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_ASIENTOVEHICULO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TA_ASIENTOVEHICULO](
	[INT_VEHICULO] [int] NOT NULL,
	[DTE_FECHASALIDA] [smalldatetime] NOT NULL,
	[DTE_HORASALIDA] [smalldatetime] NOT NULL,
	[CHR_ASIENTO] [char](2) NOT NULL,
	[INT_CODIGOESTASIENTO] [int] NOT NULL,
 CONSTRAINT [PK_ASIENTOVEHICULO] PRIMARY KEY CLUSTERED 
(
	[INT_VEHICULO] ASC,
	[DTE_FECHASALIDA] ASC,
	[DTE_HORASALIDA] ASC,
	[CHR_ASIENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_CARGOSDESEMPENADOS]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_CARGOSDESEMPENADOS](
	[INT_CODIGOCARGODESEMPENADO] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGOPERSONA] [int] NOT NULL,
	[INT_CODIGOAREA] [int] NOT NULL,
	[INT_CODIGOCARGO] [int] NOT NULL,
	[DTE_DESDE] [datetime] NOT NULL,
	[DTE_HASTA] [datetime] NULL,
 CONSTRAINT [PK_dbo.TA_CARGOSDESEMPENADOS] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOCARGODESEMPENADO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_ALMACEN]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_ALMACEN](
	[INT_CODIGO_ALMACEN] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_AGENCIA] [int] NULL,
	[VCH_NOMBRE] [varchar](50) NULL,
	[VCH_DESCRIPCION] [varchar](100) NULL,
	[INT_CAPACIDAD] [int] NULL,
	[VCH_DIRECCION] [varchar](100) NULL,
 CONSTRAINT [PK_TA_ALMACEN] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_ALMACEN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARAGENCIA]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARAGENCIA]
AS
SELECT  INT_CODIGO_AGENCIA ,
        VCH_NOMBRE ,
        VCH_DIRECCION ,
        VCH_UBIGEO_DIRECCION FROM dbo.TA_AGENCIA
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARCLIENTE]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARCLIENTE]
@VCH_DOCUMENTO VARCHAR(15)
AS
SELECT  VCH_DOCUMENTO ,
        VCH_NOMBRES ,
        VCH_APELLIDOS ,
        VCH_DIRECCION ,
        VCH_CORREO ,
        VCH_TELEFONO ,
        VCH_UBIGEO FROM dbo.TA_CLIENTE
WHERE VCH_DOCUMENTO LIKE '%' + @VCH_DOCUMENTO  + '%'
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARUNOCLIENTE]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARUNOCLIENTE]
@VCH_DOCUMENTO VARCHAR(15)
AS
SELECT  VCH_DOCUMENTO ,
        VCH_NOMBRES ,
        VCH_APELLIDOS ,
        VCH_DIRECCION ,
        VCH_CORREO ,
        VCH_TELEFONO ,
        VCH_UBIGEO FROM dbo.TA_CLIENTE
WHERE VCH_DOCUMENTO=@VCH_DOCUMENTO
GO
/****** Object:  Table [dbo].[TA_USUARIO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_USUARIO](
	[INT_CODIGO_USUARIO] [int] IDENTITY(1,1) NOT NULL,
	[VCH_USUARIO] [varchar](50) NULL,
	[VCH_CLAVE] [varchar](50) NULL,
	[INT_CODIGO_ROL] [int] NULL,
	[INT_CODIGOPERSONA] [int] NULL,
	[VCH_NOMBRES] [varchar](50) NULL,
 CONSTRAINT [PK_TA_USUARIO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_USUARIO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_SOLICITUDESPERSONAL]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDESPERSONAL](
	[INT_CODIGOSOLICITUD] [int] NOT NULL,
	[DTE_FECHAVENCIMIENTO] [datetime] NOT NULL,
	[INT_CODIGOAREA] [int] NOT NULL,
	[INT_CODIGOCARGO] [int] NOT NULL,
	[DEC_SALARIO] [decimal](18, 2) NOT NULL,
	[VCH_INICIO] [nvarchar](max) NULL,
	[VCH_CONTRATO] [nvarchar](max) NULL,
	[INT_CODIGOTIPOEDUCACION] [int] NOT NULL,
	[VCH_EDUCACIONDESCRIPCION] [nvarchar](max) NULL,
	[VCH_EXPERIENCIALABORAL] [nvarchar](max) NULL,
	[VCH_FUNCIONES] [nvarchar](max) NULL,
	[VCH_REQUISITOS] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.TA_SOLICITUDESPERSONAL] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOSOLICITUD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_SOLICITUDESCAPACITACION]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDESCAPACITACION](
	[INT_CODIGOSOLICITUD] [int] NOT NULL,
	[DTE_FECHAPLANIFICADA] [datetime] NOT NULL,
	[INT_CODIGOPERSONA] [int] NOT NULL,
	[INT_CODIGOCAPACITACION] [int] NOT NULL,
 CONSTRAINT [PK_dbo.TA_SOLICITUDESCAPACITACION] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOSOLICITUD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_RUTA](
	[INT_CODIGO_RUTA] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_AGENCIAORIGEN] [int] NULL,
	[INT_CODIGO_AGENCIADESTINO] [int] NULL,
	[BLN_ESTADO] [bit] NULL,
 CONSTRAINT [PK_Table_1] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_RUTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_PASAJERO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_PASAJERO](
	[INT_CODIGOPASAJERO] [int] NOT NULL,
	[INT_CODIGOPERSONA] [int] NOT NULL,
	[INT_EDADPASAJERO] [int] NULL,
	[BLN_ACTIVO] [bit] NOT NULL,
 CONSTRAINT [PK_TA_PASAJERO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOPASAJERO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_DETALLESHOJAVIDA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_DETALLESHOJAVIDA](
	[INT_CODIGODETALLEHOJAVIDA] [int] IDENTITY(1,1) NOT NULL,
	[VCH_INSTITUCION] [nvarchar](max) NOT NULL,
	[DTE_DESDE] [datetime] NOT NULL,
	[DTE_HASTA] [datetime] NULL,
	[VCH_OBSERVACIONES] [nvarchar](max) NULL,
	[INT_CODIGOPERSONA] [int] NOT NULL,
 CONSTRAINT [PK_dbo.TA_DETALLESHOJAVIDA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGODETALLEHOJAVIDA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_EVALUACIONESDESEMPENO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_EVALUACIONESDESEMPENO](
	[INT_CODIGOEVALUACIONDESEMPENO] [int] IDENTITY(1,1) NOT NULL,
	[DTE_FECHA] [datetime] NOT NULL,
	[DEC_NOTA] [decimal](18, 2) NOT NULL,
	[VCH_OBSERVACIONES] [nvarchar](max) NULL,
	[INT_CODIGOEVALUADOR] [int] NOT NULL,
	[INT_CODIGOEVALUADO] [int] NOT NULL,
 CONSTRAINT [PK_dbo.TA_EVALUACIONESDESEMPENO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOEVALUACIONDESEMPENO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_EVALUACION_DESEMPENO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_EVALUACION_DESEMPENO](
	[INT_CODIGOEVALUACIONDESEMPENO] [int] NOT NULL,
	[DTM_FECHA] [date] NULL,
	[INT_NOTA] [int] NULL,
	[VCH_OBSERVACIONES] [varchar](250) NULL,
	[INT_CODIGOPERSONA] [int] NOT NULL,
	[INT_CODIGOEVALUADO] [int] NOT NULL,
 CONSTRAINT [PK_TA_EVALUACION_DESEMPENO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOEVALUACIONDESEMPENO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_EXPERIENCIASLABORALES]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_EXPERIENCIASLABORALES](
	[INT_CODIGODETALLEHOJAVIDA] [int] NOT NULL,
	[VCH_CARGO] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_dbo.TA_EXPERIENCIASLABORALES] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGODETALLEHOJAVIDA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_EDUCACIONES]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_EDUCACIONES](
	[INT_CODIGODETALLEHOJAVIDA] [int] NOT NULL,
	[INT_CODIGOEDUCACION] [int] NOT NULL,
	[VCH_GRADOOBTENIDO] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_dbo.TA_EDUCACIONES] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGODETALLEHOJAVIDA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_RECLAMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_RECLAMO](
	[INT_RECLAMO] [int] NOT NULL,
	[INT_CODIGOPASAJERO] [int] NULL,
	[INT_TIPOSOLICITUD] [int] NULL,
	[INT_AREA] [int] NULL,
	[CHR_NUMEROBOLETO] [char](10) NULL,
	[DTE_FECHA] [smalldatetime] NULL,
	[VCH_MOTIVO] [varchar](250) NULL,
	[VCH_ARCHIVO] [varbinary](max) NULL,
	[BLN_ACTIVO] [bit] NULL,
 CONSTRAINT [PK_TA_RECLAMO] PRIMARY KEY CLUSTERED 
(
	[INT_RECLAMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_PROGRAMACION_RUTA](
	[INT_CODIGO_PROGRAMACION_RUTA] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_RUTA] [int] NULL,
	[DTM_FECHA_ORIGEN] [datetime] NULL,
	[DTM_FECHA_DESTINO] [datetime] NULL,
	[TIM_HORA_SALIDA] [time](7) NULL,
	[TIM_HORA_LLEGADA] [time](7) NULL,
	[INT_TIPO_SERVICIO] [int] NULL,
	[INT_CODIGOVEHICULO] [int] NULL,
	[INT_CODIGOPERSONA] [int] NULL,
	[BLN_ESTADO] [bit] NULL,
 CONSTRAINT [PK_TA_PROGRAMACION_RUTA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_PROGRAMACION_RUTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_STOCK]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_STOCK](
	[INT_CODIGO_PRODUCTOCABINA] [int] NOT NULL,
	[INT_CODIGO_ALMACEN] [int] NOT NULL,
	[INT_CANTIDAD_INICIAL] [int] NOT NULL,
	[INT_STOCK_MINIMO] [int] NOT NULL,
 CONSTRAINT [PK_STOCK] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_PRODUCTOCABINA] ASC,
	[INT_CODIGO_ALMACEN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_ASIENTOSVEHICULO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: SP_ASIENTOSVEHICULO 1
--****************************************************************************
CREATE Procedure [dbo].[SP_ASIENTOSVEHICULO]
(
   @pCodVehiculo Int = 0
)
As
Begin
   Set Nocount On
   Select 
      a.INT_VEHICULO,
      FechaSalida = Convert(varchar(20),a.DTE_FECHASALIDA,103),
      HoraSalida  = RIGHT(Convert(datetime,a.DTE_HORASALIDA,108),8),
      a.CHR_ASIENTO,
      b.VCH_PLACA,
      c.VCH_DETESTASIENTO
   From TA_ASIENTOVEHICULO a 
   Inner Join TA_VEHICULO        b On a.INT_VEHICULO     = b.INT_VEHICULO
   Inner Join TA_ESTADOASIENTO   c On a.INT_CODIGOESTASIENTO   = c.INT_CODIGOESTASIENTO
   Where a.INT_CODIGOESTASIENTO = 3 And a.INT_VEHICULO = @pCodVehiculo
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_VALIDAUSUARIO]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_VALIDAUSUARIO]    
(@VCH_USUARIO AS VARCHAR(50),    
@VCH_CLAVE AS VARCHAR(50))    
AS    
BEGIN    
SELECT U.INT_CODIGO_USUARIO,U.VCH_USUARIO,U.VCH_CLAVE,U.INT_CODIGO_ROL,U.VCH_NOMBRES,R.VCH_NOMBRE ROL--,U.INT_CODIGO_UBIGEO, UB.VCH_NOMBRE NOM_DEPARTAMENTO
FROM TA_USUARIO U     
INNER JOIN TA_ROL R ON U.INT_CODIGO_ROL = R.INT_CODIGO_ROL    
--INNER JOIN TA_UBIGEO UB ON U.INT_CODIGO_UBIGEO = UB.INT_CODIGO_UBIGEO
WHERE U.VCH_USUARIO = @VCH_USUARIO AND U.VCH_CLAVE = @VCH_CLAVE    
END
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARPROGRAMACIONXDEPARTAMENTO]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARPROGRAMACIONXDEPARTAMENTO]
@CODUBIGEO AS VARCHAR(2)
as
SELECT  A.INT_CODIGO_PROGRAMACION_RUTA ,
        A.INT_CODIGO_RUTA ,
        A.DTM_FECHA_ORIGEN ,
        A.DTM_FECHA_DESTINO ,
        A.TIM_HORA_SALIDA ,
        A.TIM_HORA_LLEGADA ,
        A.INT_TIPO_SERVICIO ,
        A.INT_CODIGOVEHICULO ,
        A.INT_CODIGOPERSONA ,
        A.BLN_ESTADO ,
        AG1.VCH_NOMBRE  AS VCH_ORIGEN,
        AG2.VCH_NOMBRE AS VCH_DESTINO ,
		b.INT_CODIGO_AGENCIAORIGEN,
		b.INT_CODIGO_AGENCIADESTINO
FROM    dbo.TA_PROGRAMACION_RUTA A
        INNER JOIN dbo.TA_RUTA B ON B.INT_CODIGO_RUTA = A.INT_CODIGO_RUTA
        INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIAORIGEN
        INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIADESTINO
WHERE	ag2.VCH_UBIGEO_DIRECCION LIKE @CODUBIGEO + '%'
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARPROGRAMACION]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARPROGRAMACION]
@INT_CODIGO_AGENCIADESTINO int
as
SELECT  A.INT_CODIGO_PROGRAMACION_RUTA ,
        A.INT_CODIGO_RUTA ,
        A.DTM_FECHA_ORIGEN ,
        A.DTM_FECHA_DESTINO ,
        A.TIM_HORA_SALIDA ,
        A.TIM_HORA_LLEGADA ,
        A.INT_TIPO_SERVICIO ,
        A.INT_CODIGOVEHICULO ,
        A.INT_CODIGOPERSONA ,
        A.BLN_ESTADO ,
        AG1.VCH_NOMBRE  AS VCH_ORIGEN,
        AG2.VCH_NOMBRE AS VCH_DESTINO ,
		b.INT_CODIGO_AGENCIAORIGEN,
		b.INT_CODIGO_AGENCIADESTINO
FROM    dbo.TA_PROGRAMACION_RUTA A
        INNER JOIN dbo.TA_RUTA B ON B.INT_CODIGO_RUTA = A.INT_CODIGO_RUTA
        INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIAORIGEN
        INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIADESTINO
WHERE B.INT_CODIGO_AGENCIADESTINO=@INT_CODIGO_AGENCIADESTINO
GO
/****** Object:  StoredProcedure [dbo].[SP_CONSULTARFILMACION]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_CONSULTARFILMACION]

@DTM_FECHA_DESDE AS DATETIME,
@ESTADO VARCHAR(1)

AS

BEGIN

SELECT DTM_FECHA_ORIGEN,TIM_HORA_SALIDA,INT_CODIGO_PROGRAMACION_RUTA,TIM_HORA_LLEGADA, 10 AS CANTIDAD,B.ESTADO,
B.INT_SOLICITUD,b.MINUTOS_GRABACION,b.RUTA_VIDEO
FROM TA_PROGRAMACION_RUTA A LEFT JOIN TA_SOLICITUDFILMACION B ON A.INT_CODIGO_PROGRAMACION_RUTA=B.CODIGO_SALIDA_BUS
WHERE  CONVERT(VARCHAR,A.DTM_FECHA_ORIGEN, 103) >=CONVERT(VARCHAR, @DTM_FECHA_DESDE, 103)
and isnull(b.ESTADO,'N')=@ESTADO

END
GO
/****** Object:  Table [dbo].[TA_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_CARGA](
	[INT_CODIGO_CARGA] [int] IDENTITY(1,1) NOT NULL,
	[VCH_FICHA] [varchar](20) NULL,
	[DTM_FECHA_REGISTRO] [datetime] NULL,
	[VCH_REMITENTE] [varchar](50) NULL,
	[VCH_DESTINATARIO] [varchar](50) NULL,
	[DBL_PESOTOTAL] [decimal](8, 2) NULL,
	[DBL_IMPORTETOTAL] [decimal](8, 2) NULL,
	[DBL_IGV] [decimal](8, 2) NULL,
	[DBL_TOTAL] [decimal](8, 2) NULL,
	[VCH_OBSERVACION] [varchar](255) NULL,
	[VCH_CLAVE_SEGURIDAD] [varchar](10) NULL,
	[VCH_PREGUNTA_SEGURIDAD] [varchar](50) NULL,
	[VCH_RESPUESTA_SEGURIDAD] [varchar](50) NULL,
	[INT_TIPO_PAGO] [int] NULL,
	[INT_CODIGO_PROGRAMACION_RUTA] [int] NULL,
	[VCH_CLIENTE_ORIGEN] [varchar](15) NULL,
	[VCH_ESTADOPAGO] [varchar](20) NULL,
	[VCH_CLIENTE_DESTINO] [varchar](15) NULL,
	[VCH_ESTADO] [varchar](25) NULL,
 CONSTRAINT [PK_TA_CARGA_1] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_CARGA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_BOLETO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_BOLETO](
	[INT_CODIGOBOLETO] [int] NOT NULL,
	[INT_CODIGO_PROGRAMACION_RUTA] [int] NULL,
	[INT_CODIGOPASAJERO] [int] NOT NULL,
	[CHR_NUMEROBOLETO] [char](10) NOT NULL,
	[DEC_PRECIOPASAJE] [decimal](12, 2) NOT NULL,
	[DTE_FECHACHECKIN] [smalldatetime] NULL,
	[DTE_FECHASALIDA] [smalldatetime] NOT NULL,
	[DTE_HORASALIDA] [smalldatetime] NOT NULL,
	[CHR_ASIENTO] [char](2) NULL,
	[VCH_UBICACION] [varchar](60) NULL,
	[VCH_DETALLE_INFRACCION] [varchar](250) NULL,
	[BLN_ACTIVO] [bit] NOT NULL,
 CONSTRAINT [PK_TA_BOLETO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGOBOLETO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARUNOPROGRAMACION]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARUNOPROGRAMACION]
@INT_CODIGO_PROGRAMACION_RUTA int
as
SELECT  A.INT_CODIGO_PROGRAMACION_RUTA ,
        A.INT_CODIGO_RUTA ,
        A.DTM_FECHA_ORIGEN ,
        A.DTM_FECHA_DESTINO ,
        A.TIM_HORA_SALIDA ,
        A.TIM_HORA_LLEGADA ,
        A.INT_TIPO_SERVICIO ,
        A.INT_CODIGOVEHICULO ,
        A.INT_CODIGOPERSONA ,
        A.BLN_ESTADO ,
        AG1.VCH_NOMBRE AS VCH_ORIGEN,
        AG2.VCH_NOMBRE AS VCH_DESTINO ,
		b.INT_CODIGO_AGENCIAORIGEN,
		b.INT_CODIGO_AGENCIADESTINO,
		V.VCH_PLACA
FROM    dbo.TA_PROGRAMACION_RUTA A
        INNER JOIN dbo.TA_RUTA B ON B.INT_CODIGO_RUTA = A.INT_CODIGO_RUTA
		INNER JOIN dbo.TA_VEHICULO V ON V.INT_VEHICULO = A.INT_CODIGOVEHICULO
		INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIAORIGEN
        INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= B.INT_CODIGO_AGENCIADESTINO
WHERE a.INT_CODIGO_PROGRAMACION_RUTA = @INT_CODIGO_PROGRAMACION_RUTA
GO
/****** Object:  Table [dbo].[TA_SOLICITUDCOCINA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDCOCINA](
	[INT_CODIGO_SOLICITUDCOCINA] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_PROGRAMACION_RUTA] [int] NOT NULL,
	[DTE_FECHA_SOLICITUD] [smalldatetime] NULL,
	[TIN_ESTADO] [tinyint] NOT NULL,
 CONSTRAINT [PK_SOLPRODCOCINA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_SOLICITUDCOCINA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_SOLPRODUCTODECABINA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLPRODUCTODECABINA](
	[INT_CODIGO_SOLPRODUCTODECABINA] [int] NOT NULL,
	[DTE_FECHA_SOLICITUD] [smalldatetime] NOT NULL,
	[INT_CODIGO_PRODUCTOCABINA] [int] NOT NULL,
	[INT_CODIGO_PROGRAMACION_RUTA] [int] NOT NULL,
	[INT_CANTIDAD] [int] NOT NULL,
	[BLN_ESTADO] [bit] NOT NULL,
 CONSTRAINT [PK_SOLPRODUCTODECABINA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_SOLPRODUCTODECABINA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_GUIAREMISION]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_GUIAREMISION](
	[INT_CODIGO_GUIA] [int] IDENTITY(1,1) NOT NULL,
	[DTM_FECHA_EMISION] [datetime] NULL,
	[DBL_PESOTOTAL] [float] NULL,
	[INT_CODIGO_PROGRAMACION_RUTA] [int] NOT NULL,
 CONSTRAINT [PK_TA_GUIAREMISION] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_GUIA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_FICHA_MOVIMIENTO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_FICHA_MOVIMIENTO](
	[INT_CODIGO_MOVIMIENTO] [int] IDENTITY(1,1) NOT NULL,
	[DTM_FECHAHORA] [datetime] NULL,
	[INT_TIPO_MOVIMIENTO] [int] NULL,
	[INT_CODIGO_ALMACEN] [int] NULL,
	[INT_CODIGO_CARGA] [int] NULL,
	[VCH_OBSERVACION] [varchar](200) NULL,
 CONSTRAINT [PK_TA_FICHA_MOVIMIENTO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_MOVIMIENTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_DETALLECARGA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_DETALLECARGA](
	[INT_CODIGO_CARGA] [int] NOT NULL,
	[INT_CODIGO_PRODUCTO] [int] NOT NULL,
	[VCH_DESCRIPCION] [varchar](50) NULL,
	[INT_TIPO_CARGA] [int] NULL,
	[INT_CANTIDAD] [int] NULL,
	[DBL_PESO] [decimal](8, 2) NULL,
	[DBL_IMPORTE] [decimal](8, 2) NULL,
 CONSTRAINT [PK_TA_DETALLECARGA] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_CARGA] ASC,
	[INT_CODIGO_PRODUCTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_SOLICITUDINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_SOLICITUDINSUMO](
	[INT_CODIGO_SOLICITUDINSUMO] [int] IDENTITY(1,1) NOT NULL,
	[DTE_FECHA_SOLICITUD] [smalldatetime] NOT NULL,
	[INT_CODIGO_SOLICITUDCOCINA] [int] NULL,
	[TIN_ESTADO] [tinyint] NOT NULL,
 CONSTRAINT [PK_SOLICITUDINSUMO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_SOLICITUDINSUMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_TRAZABILIDADCARGA]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_TRAZABILIDADCARGA](
	[INT_CODIGO_CARGA] [int] NOT NULL,
	[VCH_OBSERVACIONES] [varchar](100) NULL,
	[VCH_ESTADOCARGA] [varchar](50) NOT NULL,
	[DTM_FECHA_REGISTRO] [datetime] NULL,
 CONSTRAINT [PK_TA_TRAZABILIDADCARGA_1] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_CARGA] ASC,
	[VCH_ESTADOCARGA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TA_EQUIPAJE]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TA_EQUIPAJE](
	[INT_CODEQUIPAJE] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGOBOLETO] [int] NULL,
	[INT_CODIGOETIQUETA] [int] NOT NULL,
	[CHR_NUMEROEQUIPAJE] [char](10) NOT NULL,
	[DTE_FECHAHORA] [smalldatetime] NOT NULL,
	[DTE_FECHAVERIFICACION] [smalldatetime] NULL,
	[DEC_PESO] [decimal](12, 2) NULL,
	[CHR_TAMANO] [char](20) NULL,
	[DEC_PRECIO] [decimal](12, 2) NULL,
	[VCH_UBICACION] [varchar](20) NULL,
	[CHR_CODIGOBARRAS] [char](20) NULL,
	[VCH_ESTADOEQUIPAJE] [varchar](20) NOT NULL,
	[BLN_ACTIVO] [bit] NOT NULL,
 CONSTRAINT [PK_EQUIPAJE] PRIMARY KEY CLUSTERED 
(
	[INT_CODEQUIPAJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[SP_REGISTRARINFRACCION]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_REGISTRARINFRACCION]
(@VCH_DETALLE_INFRACCION AS VARCHAR(250),
@pNROBOLETO Char(10) = Null
)
AS
UPDATE TA_BOLETO SET VCH_DETALLE_INFRACCION = @VCH_DETALLE_INFRACCION
WHERE CHR_NUMEROBOLETO = @pNROBOLETO
GO
/****** Object:  StoredProcedure [dbo].[SP_RECLAMO_REGISTRAR]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_RECLAMO_REGISTRAR]
@NROBOLETO			CHAR(10),
@IDTIPOSOLICITUD	INT,
@IDAREA				INT,
@MOTIVO				VARCHAR(250)

AS

DECLARE @ID INT
SET @ID = (SELECT ISNULL(MAX(INT_RECLAMO + 1),1) AS  ID FROM TA_RECLAMO)

INSERT INTO TA_RECLAMO
SELECT @ID, pa.INT_CODIGOPASAJERO, @IDTIPOSOLICITUD, @IDAREA, bo.CHR_NUMEROBOLETO, GETDATE(),@MOTIVO, 1, 1
FROM TA_BOLETO bo
INNER JOIN TA_PASAJERO pa ON bo.INT_CODIGOPASAJERO = pa.INT_CODIGOPASAJERO
INNER JOIN TA_PERSONA pe ON pa.INT_CODIGOPERSONA = pe.INT_CODIGOPERSONA
WHERE bo.CHR_NUMEROBOLETO = COALESCE(@NROBOLETO,bo.CHR_NUMEROBOLETO)
GO
/****** Object:  StoredProcedure [dbo].[SP_GENERARCODIGOCARGA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_GENERARCODIGOCARGA]
as
SELECT  'F' +  RIGHT('000000' + Ltrim(Rtrim(MAX(RIGHT(VCH_FICHA,6)) +1)),6) AS FICHA  FROM dbo.TA_CARGA
GO
/****** Object:  StoredProcedure [dbo].[SP_ELIMINARCARGA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ELIMINARCARGA]
(@INT_CODIGO_CARGA AS INT)
AS
BEGIN
DELETE FROM TA_CARGA  WHERE INT_CODIGO_CARGA=@INT_CODIGO_CARGA
END
GO
/****** Object:  StoredProcedure [dbo].[SP_BOLETOCONSULTARRECLAMO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_BOLETOCONSULTARRECLAMO]
(
@pNROBOLETO Char(10) = Null,
@pDNI       Char(8)  = Null
)
As
Begin
   Set Nocount On
   If(Len(@pNROBOLETO)>0 Or Len(@pDNI)>0) 
   Begin
   If(@pNROBOLETO='') Set @pNROBOLETO = Null
   If(@pDNI='') Set @pDNI = Null   
   End
   
SELECT
bo.CHR_NUMEROBOLETO,
pe.VCH_APEPATPERSONA +' '+ pe.VCH_APEMATPERSONA +', '+ pe.VCH_NOMBREPERSONA AS PASAJERO,
pe.VCH_DIRECCION,
pe.VCH_TELEFONO,
-- 'nombre@dominio.com' AS CORREO,
Convert(varchar(20),GETDATE(),103) AS FECHAACTUAL,
RIGHT(Convert(datetime, GETDATE(), 108),8) AS HORAACTUAL
FROM TA_BOLETO bo
INNER JOIN TA_PASAJERO pa ON bo.INT_CODIGOPASAJERO = pa.INT_CODIGOPASAJERO
INNER JOIN TA_PERSONA pe ON pa.INT_CODIGOPERSONA = pe.INT_CODIGOPERSONA
WHERE bo.CHR_NUMEROBOLETO = COALESCE(@pNROBOLETO,bo.CHR_NUMEROBOLETO) 
AND pe.VCH_NUMERODOCUMENTO = COALESCE(@pDNI,pe.VCH_NUMERODOCUMENTO)
Set Nocount Off
End

--EXEC [SP_BOLETOCONSULTARRECLAMO] '001-000001'
GO
/****** Object:  StoredProcedure [dbo].[SP_BOLETOCONSULTAR]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input : @pNROBOLETO - Número de Boleto
-- @pDNI - Nro de DNI del Pasajero
-- Output : Datos de boleto
-- Creado por : xxx
-- Fec Creación : xx
------------------------------------------------------------------------------
-- Ejecución: SP_BOLETOCONSULTAR '001-000001',Null
-- Ejecución: SP_BOLETOCONSULTAR Null,'09982311'
--****************************************************************************
CREATE Procedure [dbo].[SP_BOLETOCONSULTAR]
(
@pNROBOLETO Char(10) = Null,
@pDNI Char(8) = Null
)
As
Begin
Set Nocount On
If(Len(@pNROBOLETO)>0 Or Len(@pDNI)>0)
Begin
If(@pNROBOLETO='') Set @pNROBOLETO = Null
If(@pDNI='') Set @pDNI = Null
End
SELECT
bo.INT_CODIGOBOLETO,
bo.CHR_NUMEROBOLETO,
Pasajero = pe.VCH_APEPATPERSONA +' '+ pe.VCH_APEMATPERSONA +', '+ pe.VCH_NOMBREPERSONA,
bo.DEC_PRECIOPASAJE,
ve.VCH_PLACA,
ts.VCH_NOMBRE,
ao.VCH_NOMBRE AS VCH_ORIGEN,
ad.VCH_NOMBRE AS VCH_DESTINO,
FechaSalida = Convert(varchar(20),bo.DTE_FECHASALIDA,103),
HoraSalida = RIGHT(Convert(datetime,bo.DTE_HORASALIDA,108),8),
bo.CHR_ASIENTO,
bo.VCH_UBICACION,
Chofer = co.VCH_APEPATPERSONA +' '+ co.VCH_APEMATPERSONA +', '+ co.VCH_NOMBREPERSONA,
eav.VCH_DETESTASIENTO,
FechaActual = Convert(varchar(20),GETDATE(),103),
HoraActual = RIGHT(Convert(datetime, GETDATE(), 108),8),
ve.INT_VEHICULO,
"ESTADO_CHECKIN" =
CASE
WHEN bo.DTE_FECHACHECKIN IS NULL THEN 'Sin Checkin'
WHEN bo.DTE_FECHACHECKIN IS NOT NULL THEN 'Checkin realizado'
END ,
"ESTADO_HORA" =
CASE
WHEN DATEPART (MINUTE,bo.DTE_HORASALIDA) - DATEPART (MINUTE,GETDATE()) > 20 THEN 'NORMAL'
WHEN DATEPART (MINUTE,bo.DTE_HORASALIDA) - DATEPART (MINUTE,GETDATE()) > 10 and DATEPART (MINUTE,bo.DTE_HORASALIDA) - DATEPART (MINUTE,GETDATE()) < 20 THEN 'EN HORA'
WHEN DATEPART (MINUTE,bo.DTE_HORASALIDA) - DATEPART (MINUTE,GETDATE()) < 10 THEN 'TARDANZA'
WHEN DATEPART (MINUTE,bo.DTE_HORASALIDA) - DATEPART (MINUTE,GETDATE()) <= 0 THEN 'VENCIDO'
END
FROM TA_BOLETO (Nolock) bo
INNER JOIN TA_PASAJERO pa ON bo.INT_CODIGOPASAJERO = pa.INT_CODIGOPASAJERO
INNER JOIN TA_PERSONA pe ON pa.INT_CODIGOPERSONA = pe.INT_CODIGOPERSONA
INNER JOIN TA_PROGRAMACION_RUTA pr On bo.INT_CODIGO_PROGRAMACION_RUTA = pr.INT_CODIGO_PROGRAMACION_RUTA
INNER JOIN TA_PERSONA co ON pr.INT_CODIGOPERSONA = co.INT_CODIGOPERSONA AND co.INT_CODIGOCARGO = 2
INNER JOIN TA_RUTA ru ON pr.INT_CODIGO_RUTA = ru.INT_CODIGO_RUTA
INNER JOIN TA_AGENCIA ao ON ru.INT_CODIGO_AGENCIAORIGEN = ao.INT_CODIGO_AGENCIA
INNER JOIN TA_AGENCIA ad ON ru.INT_CODIGO_AGENCIADESTINO = ad.INT_CODIGO_AGENCIA
INNER JOIN TA_VEHICULO ve ON pr.INT_CODIGOVEHICULO = ve.INT_VEHICULO
INNER JOIN TA_TIPO_SERVICIO ts ON pr.INT_TIPO_SERVICIO = ts.INT_CODIGOTIPOSERVICIO
INNER JOIN TA_ASIENTOVEHICULO av ON pr.INT_CODIGOVEHICULO = av.INT_VEHICULO And bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA And bo.DTE_HORASALIDA = av.DTE_HORASALIDA And bo.CHR_ASIENTO = av.CHR_ASIENTO
INNER JOIN TA_ESTADOASIENTO eav ON av.INT_CODIGOESTASIENTO = eav.INT_CODIGOESTASIENTO
WHERE av.INT_CODIGOESTASIENTO <> 3
AND bo.CHR_NUMEROBOLETO = COALESCE(@pNROBOLETO,bo.CHR_NUMEROBOLETO)
AND pe.VCH_NUMERODOCUMENTO = COALESCE(@pDNI,pe.VCH_NUMERODOCUMENTO)
Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTUALIZARESTADOCARGA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTUALIZARESTADOCARGA]
@VCH_ESTADO VARCHAR(25),
@INT_CODIGO_CARGA INT
AS
BEGIN
UPDATE dbo.TA_CARGA SET VCH_ESTADO=@VCH_ESTADO
WHERE INT_CODIGO_CARGA=@INT_CODIGO_CARGA
END
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTUALIZARCLAVE]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ACTUALIZARCLAVE]
@VCH_CLAVE_SEGURIDAD VARCHAR(25),
@INT_CODIGO_CARGA INT
AS
BEGIN
UPDATE dbo.TA_CARGA SET VCH_CLAVE_SEGURIDAD=@VCH_CLAVE_SEGURIDAD
WHERE INT_CODIGO_CARGA=@INT_CODIGO_CARGA
END
GO
/****** Object:  StoredProcedure [dbo].[SP_BOLETOACTUALIZARASIENTO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: SP_BOLETOACTUALIZARASIENTO '001-000001','02'
--****************************************************************************
CREATE Procedure [dbo].[SP_BOLETOACTUALIZARASIENTO]
(
   @CHR_NUMEROBOLETO Char(10) = Null,
   @CHR_ASIENTO Char(2) = Null,
   @CHR_ASIENTO_L Char(2) = Null
)
As
Begin
   Set Nocount On
   
   Update TA_BOLETO Set CHR_ASIENTO = @CHR_ASIENTO Where CHR_NUMEROBOLETO=@CHR_NUMEROBOLETO
   
    
   UPDATE av
   SET av.INT_CODIGOESTASIENTO = 2 -- Seleccionado
   FROM TA_BOLETO (Nolock) bo
   INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = bo.INT_CODIGO_PROGRAMACION_RUTA
   INNER JOIN TA_VEHICULO ve ON pr.INT_CODIGOVEHICULO = ve.INT_VEHICULO 
   INNER JOIN TA_ASIENTOVEHICULO av ON ve.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA AND bo.CHR_ASIENTO = av.CHR_ASIENTO
   WHERE bo.CHR_NUMEROBOLETO = @CHR_NUMEROBOLETO
   
   
   UPDATE av
   SET av.INT_CODIGOESTASIENTO = 3 -- Libre
   FROM TA_BOLETO (Nolock) bo
   INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = bo.INT_CODIGO_PROGRAMACION_RUTA
   INNER JOIN TA_VEHICULO ve ON pr.INT_CODIGOVEHICULO = ve.INT_VEHICULO 
   INNER JOIN TA_ASIENTOVEHICULO av ON ve.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA
   WHERE bo.CHR_NUMEROBOLETO = @CHR_NUMEROBOLETO And av.CHR_ASIENTO=@CHR_ASIENTO_L
     
  
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARUNOCARGA]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARUNOCARGA]
    @INT_CODIGO_CARGA INT
AS
    
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.DBL_IGV ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                   -- A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
					AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE AS VCH_DESTINO ,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO,
					A.DBL_TOTAL,
					a.VCH_RESPUESTA_SEGURIDAD,
					a.VCH_PREGUNTA_SEGURIDAD
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
            WHERE   A.INT_CODIGO_CARGA  = @INT_CODIGO_CARGA
GO

/****** Object:  StoredProcedure [dbo].[SP_LISTARALMACEN]    Script Date: 22/09/2014 04:45:01 a.m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARALMACEN]
AS
SELECT  INT_CODIGO_ALMACEN ,
        INT_CODIGO_AGENCIA ,
        VCH_NOMBRE ,
        VCH_DESCRIPCION ,
        INT_CAPACIDAD ,
        VCH_DIRECCION FROM dbo.TA_ALMACEN

GO
/****** Object:  StoredProcedure [dbo].[SP_LISTARCARGA]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTARCARGA]
    @OPT VARCHAR(2) ,
    @BUSQUEDA VARCHAR(50)
AS
    IF ( @OPT = '1' )
        BEGIN
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                   -- A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
                    AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE  AS VCH_DESTINO,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
            WHERE   A.VCH_FICHA LIKE '%' + @BUSQUEDA + '%'
        END
    
    IF ( @OPT = '2' )
        BEGIN
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                    --A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
                    AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE  AS VCH_DESTINO,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
            WHERE   A.VCH_REMITENTE LIKE '%' + @BUSQUEDA + '%'
        END
		IF ( @OPT = '3' )
        BEGIN
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                    --A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
                    AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE  AS VCH_DESTINO,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
			WHERE	A.VCH_DESTINATARIO LIKE '%' + @BUSQUEDA + '%'
        END
		IF ( @OPT = '4' )
        BEGIN
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                    --A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
                    AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE  AS VCH_DESTINO,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
			WHERE	A.VCH_CLIENTE_ORIGEN LIKE '%' + @BUSQUEDA + '%'
        END

		IF ( @OPT = '5' )
        BEGIN
            SELECT  A.INT_CODIGO_CARGA ,
                    A.VCH_FICHA ,
                    A.DTM_FECHA_REGISTRO ,
                    A.VCH_REMITENTE ,
                    A.VCH_DESTINATARIO ,
                    A.DBL_PESOTOTAL ,
                    A.DBL_IMPORTETOTAL ,
                    A.VCH_OBSERVACION ,
                    A.VCH_CLAVE_SEGURIDAD ,
                    A.INT_TIPO_PAGO ,
                    A.INT_CODIGO_PROGRAMACION_RUTA ,
                    A.VCH_CLIENTE_ORIGEN ,
                    A.VCH_ESTADOPAGO ,
                    --A.INT_CODIGO_GUIA ,
                    A.VCH_CLIENTE_DESTINO ,
                    A.VCH_ESTADO ,
                    AG1.VCH_NOMBRE AS VCH_ORIGEN ,
                    AG2.VCH_NOMBRE  AS VCH_DESTINO,
                    b.DTM_FECHA_ORIGEN ,
                    b.DTM_FECHA_DESTINO
            FROM    dbo.TA_CARGA A
                    INNER JOIN dbo.TA_PROGRAMACION_RUTA B ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
                    INNER JOIN dbo.TA_RUTA C ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
                    INNER JOIN dbo.TA_AGENCIA AG1 ON AG1.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIAORIGEN
                    INNER JOIN dbo.TA_AGENCIA AG2 ON AG2.INT_CODIGO_AGENCIA= C.INT_CODIGO_AGENCIADESTINO
			WHERE	A.VCH_CLIENTE_DESTINO LIKE '%' + @BUSQUEDA + '%'
        END
GO
/****** Object:  StoredProcedure [dbo].[SP_LISTADETALLECARGA]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_LISTADETALLECARGA]
    @INT_CODIGO_CARGA INT
AS
    SELECT  A.INT_CODIGO_CARGA ,
            A.INT_CODIGO_PRODUCTO ,
            A.VCH_DESCRIPCION ,
            A.INT_TIPO_CARGA ,
            A.INT_CANTIDAD ,
            A.DBL_PESO ,
            A.DBL_IMPORTE,
			B.DBL_PRECIO
    FROM    dbo.TA_DETALLECARGA A
            INNER JOIN dbo.TA_PRODUCTO B ON B.INT_CODIGO_PRODUCTO = A.INT_CODIGO_PRODUCTO
    WHERE   A.INT_CODIGO_CARGA = @INT_CODIGO_CARGA
GO
/****** Object:  StoredProcedure [dbo].[SP_TIKETCONSULTAR]    Script Date: 10/05/2014 23:20:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: exec SP_TIKETCONSULTAR 
--****************************************************************************
CREATE Procedure [dbo].[SP_TIKETCONSULTAR]
As
Begin
   Set Nocount On
   Select 
      a.INT_CODEQUIPAJE,
      a.CHR_NUMEROEQUIPAJE,
      a.DTE_FECHAHORA,
      a.DEC_PESO,
      a.CHR_TAMANO,
      a.CHR_CODIGOBARRAS,
      a.VCH_ESTADOEQUIPAJE,
      b.VCH_NOMBREETIQUETA
   from TA_EQUIPAJE a 
   Inner Join TA_TIPOETIQUETA b On a.INT_CODIGOETIQUETA = b.INT_CODIGOETIQUETA
   Where a.INT_CODIGOBOLETO Is Null
   And a.BLN_ACTIVO=1
   
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_ACTUALIZARTIKET]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_ACTUALIZARTIKET]
(

@codigoEtiqueta AS int,
@nroEquipaje char(10),
@peso decimal(12,2),
@tamaño char(20),
@precio decimal(12,2),
@ubicacion varchar(20),
@codigoBarra varchar(20)

)
AS 
BEGIN


UPDATE TA_EQUIPAJE SET
           
           INT_CODIGOETIQUETA = @codigoEtiqueta
           ,DEC_PESO =  @peso
           ,CHR_TAMANO = @tamaño
           ,DEC_PRECIO = @precio
           ,VCH_UBICACION = @ubicacion
           ,CHR_CODIGOBARRAS = @codigoBarra
           
           
     WHERE CHR_NUMEROEQUIPAJE = @nroEquipaje





END
GO
/****** Object:  StoredProcedure [dbo].[SP_BOLETOCHECKIN]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: SP_BOLETOCHECKIN '001-000001'
--****************************************************************************
CREATE Procedure [dbo].[SP_BOLETOCHECKIN]
(
   @pNROBOLETO Char(10) = Null
)
As
Begin
   Set Nocount On
   Update TA_BOLETO Set DTE_FECHACHECKIN = GETDATE() Where CHR_NUMEROBOLETO=@pNROBOLETO
    
   UPDATE av
   SET av.INT_CODIGOESTASIENTO = 1
   --SELECT bo.*
   FROM TA_BOLETO bo
   INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = bo.INT_CODIGO_PROGRAMACION_RUTA
   INNER JOIN TA_VEHICULO ve ON pr.INT_CODIGOVEHICULO = ve.INT_VEHICULO 
   INNER JOIN TA_ASIENTOVEHICULO av ON ve.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA AND bo.CHR_ASIENTO = av.CHR_ASIENTO
   WHERE bo.CHR_NUMEROBOLETO = @pNROBOLETO
   
   exec  SP_BOLETOCONSULTAR @pNROBOLETO,Null
   
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_BOLETOCANCELARCHECKIN]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: SP_BOLETOCANCELARCHECKIN '001-000001'
--****************************************************************************
CREATE Procedure [dbo].[SP_BOLETOCANCELARCHECKIN]
(
   @pNROBOLETO Char(10) = Null
)
As
Begin
   Set Nocount On
   
   /*
   Update g
   Set g.INT_CODIGOESTASIENTO = 3 -- Libre
   From TA_BOLETO (Nolock)       a
   Inner Join TA_ASIENTOVEHICULO g On a.INT_VEHICULO     = g.INT_VEHICULO  And a.DTE_FECHASALIDA=g.DTE_FECHASALIDA And a.DTE_HORASALIDA=g.DTE_HORASALIDA And a.CHR_ASIENTO=g.CHR_ASIENTO
   Where a.CHR_NUMEROBOLETO = @pNROBOLETO  
   */
   
   UPDATE av
   SET av.INT_CODIGOESTASIENTO = 3 -- Libre
   FROM TA_BOLETO bo
   INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = bo.INT_CODIGO_PROGRAMACION_RUTA
   INNER JOIN TA_VEHICULO ve ON pr.INT_CODIGOVEHICULO = ve.INT_VEHICULO 
   INNER JOIN TA_ASIENTOVEHICULO av ON ve.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA AND bo.CHR_ASIENTO = av.CHR_ASIENTO
   WHERE bo.CHR_NUMEROBOLETO = @pNROBOLETO
   
   exec  SP_BOLETOCONSULTAR @pNROBOLETO,Null
   
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_EQUIPAJEACTUALIZAR]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure [dbo].[SP_EQUIPAJEACTUALIZAR]
(
   @INT_CODEQUIPAJE int,
   @INT_CODIGOBOLETO int
)
As
Begin
   Set Nocount On
   Update TA_EQUIPAJE Set INT_CODIGOBOLETO = Null,VCH_ESTADOEQUIPAJE='POR CONFIRMAR' 
   Where INT_CODIGOBOLETO = @INT_CODIGOBOLETO
   
   Update TA_EQUIPAJE Set INT_CODIGOBOLETO = @INT_CODIGOBOLETO,VCH_ESTADOEQUIPAJE='CONFIRMADO' 
   Where INT_CODEQUIPAJE = @INT_CODEQUIPAJE
   
   Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_EQUIPAJEVERIFICAR]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input : @pNROBOLETO - N?mero de Boleto
-- @pDNI - Nro de DNI del Pasajero
-- Output : Datos de boleto
-- Creado por : xxx
-- Fec Creaci?n : xx
------------------------------------------------------------------------------
-- Ejecuci?n: SP_EQUIPAJECONSULTAR '001-000001',Null
-- Ejecuci?n: SP_EQUIPAJECONSULTAR Null,'07195613'
--****************************************************************************
CREATE Procedure [dbo].[SP_EQUIPAJEVERIFICAR]
(
@pNROBOLETO Char(10) = Null,
@pDNI Char(8) = Null
)
As
Begin
Set Nocount On
If(Len(@pNROBOLETO)>0 Or Len(@pDNI)>0)
Begin
If(@pNROBOLETO='') Set @pNROBOLETO = Null
If(@pDNI='') Set @pDNI = Null
End
SELECT
bo.INT_CODIGOBOLETO,
bo.CHR_NUMEROBOLETO,
Pasajero = pe.VCH_APEPATPERSONA +' '+ pe.VCH_APEMATPERSONA +', '+ pe.VCH_NOMBREPERSONA,
eq.DEC_PESO,
ao.VCH_NOMBRE AS VCH_ORIGEN,
ad.VCH_NOMBRE AS VCH_DESTINO,
FechaSalida = Convert(varchar(20),bo.DTE_FECHASALIDA,103),
HoraSalida = RIGHT(Convert(datetime,bo.DTE_HORASALIDA,108),8),
te.VCH_NOMBREETIQUETA,
eq.VCH_UBICACION,
eq.VCH_ESTADOEQUIPAJE,
"ESTADO_VERIFICACION" =
CASE
WHEN eq.DTE_FECHAVERIFICACION IS NULL THEN 'Sin verificación'
WHEN eq.DTE_FECHAVERIFICACION IS NOT NULL THEN 'Verificación realizada'
END,
"FECHA_VERIFICACION" =
CASE
WHEN eq.DTE_FECHAVERIFICACION IS NULL THEN '-'
WHEN eq.DTE_FECHAVERIFICACION IS NOT NULL THEN convert(varchar,eq.DTE_FECHAVERIFICACION, 120)
END
FROM TA_BOLETO bo
INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = pr.INT_CODIGO_PROGRAMACION_RUTA
INNER JOIN TA_RUTA ru ON pr.INT_CODIGO_RUTA = ru.INT_CODIGO_RUTA
INNER JOIN TA_AGENCIA ao ON ru.INT_CODIGO_AGENCIAORIGEN = ao.INT_CODIGO_AGENCIA
INNER JOIN TA_AGENCIA ad ON ru.INT_CODIGO_AGENCIADESTINO = ad.INT_CODIGO_AGENCIA
INNER JOIN TA_PASAJERO pa ON bo.INT_CODIGOPASAJERO = pa.INT_CODIGOPASAJERO AND pa.BLN_ACTIVO = 1
INNER JOIN TA_PERSONA pe ON pa.INT_CODIGOPERSONA = pe.INT_CODIGOPERSONA AND pe.BLN_ACTIVO = 1
INNER JOIN TA_TIPO_SERVICIO ts ON pr.INT_TIPO_SERVICIO = ts.INT_CODIGOTIPOSERVICIO
INNER JOIN TA_VEHICULO v ON pr.INT_CODIGOVEHICULO = v.INT_VEHICULO
INNER JOIN TA_ASIENTOVEHICULO av ON v.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA AND bo.CHR_ASIENTO = av.CHR_ASIENTO
INNER JOIN TA_ESTADOASIENTO eav ON av.INT_CODIGOESTASIENTO = eav.INT_CODIGOESTASIENTO
INNER JOIN TA_EQUIPAJE eq ON bo.INT_CODIGOBOLETO = eq.INT_CODIGOBOLETO AND eq.BLN_ACTIVO = 1
INNER JOIN TA_TIPOETIQUETA te ON eq.INT_CODIGOETIQUETA = te.INT_CODIGOETIQUETA
WHERE
bo.CHR_NUMEROBOLETO = COALESCE(@pNROBOLETO,bo.CHR_NUMEROBOLETO)
AND pe.VCH_NUMERODOCUMENTO = COALESCE(@pDNI,pe.VCH_NUMERODOCUMENTO)

Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_EQUIPAJECONSULTAR]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input : @pNROBOLETO - Número de Boleto
-- @pDNI - Nro de DNI del Pasajero
-- Output : Datos de boleto
-- Creado por : xxx
-- Fec Creación : xx
------------------------------------------------------------------------------
-- Ejecución: SP_EQUIPAJECONSULTAR '001-000001',Null
-- Ejecución: SP_EQUIPAJECONSULTAR Null,'07195613'
--****************************************************************************
CREATE Procedure [dbo].[SP_EQUIPAJECONSULTAR]
(
@pNROBOLETO Char(10) = Null,
@pDNI Char(8) = Null
)
As
Begin
Set Nocount On
If(Len(@pNROBOLETO)>0 Or Len(@pDNI)>0)
Begin
If(@pNROBOLETO='') Set @pNROBOLETO = Null
If(@pDNI='') Set @pDNI = Null
End
SELECT
eq.INT_CODEQUIPAJE,
eq.CHR_NUMEROEQUIPAJE,
bo.INT_CODIGOBOLETO,
bo.CHR_NUMEROBOLETO,
Pasajero = pe.VCH_APEPATPERSONA +' '+ pe.VCH_APEMATPERSONA +', '+ pe.VCH_NOMBREPERSONA,
eq.DEC_PESO,
ao.VCH_NOMBRE AS VCH_ORIGEN,
ad.VCH_NOMBRE AS VCH_DESTINO,
FechaSalida = Convert(varchar(20),bo.DTE_FECHASALIDA,103),
HoraSalida = RIGHT(Convert(datetime,bo.DTE_HORASALIDA,108),8),
te.VCH_NOMBREETIQUETA,
eq.VCH_UBICACION,
FechaActual = Convert(varchar(20),GETDATE(),103),
HoraActual = RIGHT(Convert(datetime, GETDATE(), 108),8),
eq.VCH_ESTADOEQUIPAJE,
eq.CHR_CODIGOBARRAS,
eq.CHR_TAMANO
FROM TA_BOLETO bo
INNER JOIN TA_PROGRAMACION_RUTA pr ON bo.INT_CODIGO_PROGRAMACION_RUTA = pr.INT_CODIGO_PROGRAMACION_RUTA
INNER JOIN TA_RUTA ru ON pr.INT_CODIGO_RUTA = ru.INT_CODIGO_RUTA
INNER JOIN TA_AGENCIA ao ON ru.INT_CODIGO_AGENCIAORIGEN = ao.INT_CODIGO_AGENCIA
INNER JOIN TA_AGENCIA ad ON ru.INT_CODIGO_AGENCIADESTINO = ad.INT_CODIGO_AGENCIA
INNER JOIN TA_PASAJERO pa ON bo.INT_CODIGOPASAJERO = pa.INT_CODIGOPASAJERO AND pa.BLN_ACTIVO = 1
INNER JOIN TA_PERSONA pe ON pa.INT_CODIGOPERSONA = pe.INT_CODIGOPERSONA AND pe.BLN_ACTIVO = 1
INNER JOIN TA_TIPO_SERVICIO ts ON pr.INT_TIPO_SERVICIO = ts.INT_CODIGOTIPOSERVICIO
INNER JOIN TA_VEHICULO v ON pr.INT_CODIGOVEHICULO = v.INT_VEHICULO
INNER JOIN TA_ASIENTOVEHICULO av ON v.INT_VEHICULO = av.INT_VEHICULO AND bo.DTE_FECHASALIDA = av.DTE_FECHASALIDA AND bo.DTE_HORASALIDA = av.DTE_HORASALIDA AND bo.CHR_ASIENTO = av.CHR_ASIENTO
INNER JOIN TA_ESTADOASIENTO eav ON av.INT_CODIGOESTASIENTO = eav.INT_CODIGOESTASIENTO
INNER JOIN TA_EQUIPAJE eq ON bo.INT_CODIGOBOLETO = eq.INT_CODIGOBOLETO AND eq.BLN_ACTIVO = 1
INNER JOIN TA_TIPOETIQUETA te ON eq.INT_CODIGOETIQUETA = te.INT_CODIGOETIQUETA
WHERE av.INT_CODIGOESTASIENTO <> 3 And eq.VCH_ESTADOEQUIPAJE <> 'CANCELADO'
AND bo.CHR_NUMEROBOLETO = COALESCE(@pNROBOLETO,bo.CHR_NUMEROBOLETO)
AND pe.VCH_NUMERODOCUMENTO = COALESCE(@pDNI,pe.VCH_NUMERODOCUMENTO)
AND eq.VCH_ESTADOEQUIPAJE = 'POR CONFIRMAR'
Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_INSERTARDETALLECARGA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSERTARDETALLECARGA]
    @INT_CODIGO_CARGA INT ,
    @INT_CODIGO_PRODUCTO INT ,
    @VCH_DESCRIPCION VARCHAR(50) ,
    @INT_TIPO_CARGA INT ,
    @INT_CANTIDAD INT ,
    @DBL_PESO DECIMAL(8,2) ,
    @DBL_IMPORTE DECIMAL(8,2)
AS
    INSERT  INTO dbo.TA_DETALLECARGA
            ( INT_CODIGO_CARGA ,
              INT_CODIGO_PRODUCTO ,
              VCH_DESCRIPCION ,
              INT_TIPO_CARGA ,
              INT_CANTIDAD ,
              DBL_PESO ,
              DBL_IMPORTE
            )
    VALUES  ( @INT_CODIGO_CARGA ,
              @INT_CODIGO_PRODUCTO ,
              @VCH_DESCRIPCION ,
              @INT_TIPO_CARGA ,
              @INT_CANTIDAD ,
              @DBL_PESO ,
              @DBL_IMPORTE  
            )
GO
/****** Object:  StoredProcedure [dbo].[SP_INSERTARCARGA]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSERTARCARGA]
    @INT_CODIGO_CARGA INT ,
    @VCH_FICHA VARCHAR(20) ,
    @DTM_FECHA_REGISTRO DATETIME ,
    @VCH_REMITENTE VARCHAR(50) ,
    @VCH_DESTINATARIO VARCHAR(50) ,
    @DBL_PESOTOTAL DECIMAL ,
    @DBL_IMPORTETOTAL DECIMAL(8,2) ,
    @DBL_IGV DECIMAL(8,2) ,
	@DBL_TOTAL DECIMAL(8,2) ,
    @VCH_OBSERVACION VARCHAR(255) ,
    @VCH_CLAVE_SEGURIDAD VARCHAR(10) ,
    @INT_TIPO_PAGO INT ,
    @INT_CODIGO_PROGRAMACION_RUTA INT ,
    @VCH_CLIENTE_ORIGEN VARCHAR(15) ,
    @VCH_ESTADOPAGO VARCHAR(20) ,
    --@INT_CODIGO_GUIA INT ,
    @VCH_CLIENTE_DESTINO VARCHAR(15) ,
    @VCH_ESTADO VARCHAR(25),
	@VCH_PREGUNTA_SEGURIDAD VARCHAR(50),
	@VCH_RESPUESTA_SEGURIDAD VARCHAR(50)
AS
    IF ( @INT_CODIGO_CARGA > 0 )
        BEGIN
			
			DECLARE @NombreDestino VARCHAR(50)
			SELECT @NombreDestino=VCH_NOMBRES + ' ' + VCH_APELLIDOS FROM dbo.TA_CLIENTE WHERE VCH_DOCUMENTO=@VCH_CLIENTE_DESTINO

			DELETE FROM dbo.TA_DETALLECARGA WHERE INT_CODIGO_CARGA=@INT_CODIGO_CARGA
			UPDATE TA_CARGA 
			SET INT_CODIGO_PROGRAMACION_RUTA=@INT_CODIGO_PROGRAMACION_RUTA,
				VCH_CLIENTE_DESTINO = @VCH_CLIENTE_DESTINO,
				VCH_OBSERVACION = @VCH_OBSERVACION,
				INT_TIPO_PAGO=@INT_TIPO_PAGO,
				DBL_PESOTOTAL=@DBL_PESOTOTAL,
				DBL_IMPORTETOTAL=@DBL_IMPORTETOTAL,
				DBL_IGV=@DBL_IGV,
				DBL_TOTAL=@DBL_TOTAL,
				VCH_DESTINATARIO=@NombreDestino
			WHERE INT_CODIGO_CARGA=@INT_CODIGO_CARGA
			SELECT @INT_CODIGO_CARGA
        END
    ELSE
        BEGIN
            INSERT  INTO dbo.TA_CARGA
                    ( VCH_FICHA ,
                      DTM_FECHA_REGISTRO ,
                      VCH_REMITENTE ,
                      VCH_DESTINATARIO ,
                      DBL_PESOTOTAL ,
                      DBL_IMPORTETOTAL ,
                      DBL_IGV ,
					  DBL_TOTAL,
                      VCH_OBSERVACION ,
                      VCH_CLAVE_SEGURIDAD ,
                      INT_TIPO_PAGO ,
                      INT_CODIGO_PROGRAMACION_RUTA ,
                      VCH_CLIENTE_ORIGEN ,
                      VCH_ESTADOPAGO ,
                      --INT_CODIGO_GUIA ,
                      VCH_CLIENTE_DESTINO ,
                      VCH_ESTADO,
					  VCH_PREGUNTA_SEGURIDAD,
					  VCH_RESPUESTA_SEGURIDAD
                    )
            VALUES  ( @VCH_FICHA ,
                      @DTM_FECHA_REGISTRO ,
                      @VCH_REMITENTE ,
                      @VCH_DESTINATARIO ,
                      @DBL_PESOTOTAL ,
                      @DBL_IMPORTETOTAL ,
                      @DBL_IGV ,
					  @DBL_TOTAL,
                      @VCH_OBSERVACION ,
                      @VCH_CLAVE_SEGURIDAD ,
                      @INT_TIPO_PAGO ,
                      @INT_CODIGO_PROGRAMACION_RUTA ,
                      @VCH_CLIENTE_ORIGEN ,
                      @VCH_ESTADOPAGO ,
                     -- @INT_CODIGO_GUIA ,
                      @VCH_CLIENTE_DESTINO ,
                      @VCH_ESTADO  ,
					  @VCH_PREGUNTA_SEGURIDAD,
					  @VCH_RESPUESTA_SEGURIDAD
                    )
        END
   

    SELECT  @@IDENTITY
GO
/****** Object:  StoredProcedure [dbo].[SP_INSERTA_DATA_CHECKIN]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_INSERTA_DATA_CHECKIN]
AS

-- BORRA DATA
-----------------------------------------------------------------------------------------------------------------------
DELETE FROM TA_DETALLECARGA
DELETE FROM TA_CARGA

DELETE FROM TA_SOLICITUDFILMACION

DELETE FROM TA_RECLAMO
DELETE FROM TA_EQUIPAJE
DELETE FROM TA_BOLETO
DELETE FROM TA_CARGOS
DELETE FROM TA_PROGRAMACION_RUTA
DELETE FROM TA_RUTA
DELETE FROM TA_PASAJERO
DELETE FROM TA_PERSONA
DELETE FROM TA_AGENCIA
DELETE FROM TA_UBIGEO
DELETE FROM TA_TIPOSOLICITUD
--DELETE FROM TA_AREA
DELETE FROM TA_AREAS
DELETE FROM TA_TIPOSDOCUMENTO
DELETE FROM TA_TIPO_SERVICIO
DELETE FROM TA_ASIENTOVEHICULO
DELETE FROM TA_VEHICULO
DELETE FROM TA_ESTADOASIENTO
DELETE FROM TA_TIPO_TRANSPORTE
DELETE FROM TA_TIPOETIQUETA
-----------------------------------------------------------------------------------------------------------------------

-- RESEA A CERO LOS AUTOGENERADOS
-----------------------------------------------------------------------------------------------------------------------
DBCC CHECKIDENT (TA_CARGOS, RESEED,0)
DBCC CHECKIDENT (TA_TIPO_SERVICIO, RESEED,0)
--DBCC CHECKIDENT (TA_TIPOSERVICIO, RESEED,0)
DBCC CHECKIDENT (TA_TIPOSDOCUMENTO, RESEED,0)
DBCC CHECKIDENT (TA_TIPO_TRANSPORTE, RESEED,0)
DBCC CHECKIDENT (TA_VEHICULO, RESEED,0)
DBCC CHECKIDENT (TA_AREAS, RESEED,0)
--DBCC CHECKIDENT (TA_ESTADOASIENTO, RESEED,0)
--DBCC CHECKIDENT (TA_TIPOETIQUETA, RESEED,0)
--DBCC CHECKIDENT (TA_UBIGEO, RESEED,0)
DBCC CHECKIDENT (TA_AGENCIA, RESEED,0)
DBCC CHECKIDENT (TA_RUTA, RESEED,0)
--DBCC CHECKIDENT (TA_ASIENTOVEHICULO, RESEED,0)
--DBCC CHECKIDENT (TA_PERSONA, RESEED,0)
DBCC CHECKIDENT (TA_PROGRAMACION_RUTA, RESEED,0)
--DBCC CHECKIDENT (TA_PASAJERO, RESEED,0)
--DBCC CHECKIDENT (TA_BOLETO, RESEED,0)
DBCC CHECKIDENT (TA_EQUIPAJE, RESEED,0)
DBCC CHECKIDENT (TA_SOLICITUDFILMACION, RESEED,0)
-----------------------------------------------------------------------------------------------------------------------



-- INSERTA DATA
-----------------------------------------------------------------------------------------------------------------------
/*
-- SELECT * FROM TA_AREA
INSERT INTO TA_AREA VALUES (0,'Seleccione')
INSERT INTO TA_AREA VALUES (1,'VENTAS')
INSERT INTO TA_AREA VALUES (2,'ALMACEN')
INSERT INTO TA_AREA VALUES (3,'EQUIPAJE')
INSERT INTO TA_AREA VALUES (4,'CARGA')
INSERT INTO TA_AREA VALUES (5,'SEGURIDAD')
INSERT INTO TA_AREA VALUES (6,'BUSES')
*/

-- SELECT * FROM TA_AREAS
INSERT INTO TA_AREAS VALUES ('Seleccione')
INSERT INTO TA_AREAS VALUES ('VENTAS')
INSERT INTO TA_AREAS VALUES ('ALMACEN')
INSERT INTO TA_AREAS VALUES ('EQUIPAJE')
INSERT INTO TA_AREAS VALUES ('CARGA')
INSERT INTO TA_AREAS VALUES ('SEGURIDAD')
INSERT INTO TA_AREAS VALUES ('BUSES')

-- SELECT * FROM TA_TIPOSOLICITUD
INSERT INTO TA_TIPOSOLICITUD VALUES (0,'Seleccione')
INSERT INTO TA_TIPOSOLICITUD VALUES (1,'CONSULTA')
INSERT INTO TA_TIPOSOLICITUD VALUES (2,'RECLAMO')
INSERT INTO TA_TIPOSOLICITUD VALUES (3,'SUGERENCIA')

-- SELECT * FROM TA_CARGO
--INSERT INTO TA_CARGO VALUES ('PASAJERO')
--INSERT INTO TA_CARGO VALUES ('CONDUCTOR')
--INSERT INTO TA_CARGO VALUES ('ASISTENTA BUS')

-- SELECT * FROM TA_CARGOS
INSERT INTO TA_CARGOS VALUES ('PASAJERO',1)
INSERT INTO TA_CARGOS VALUES ('CONDUCTOR',1)
INSERT INTO TA_CARGOS VALUES ('ASISTENTA BUS',1)

-- SELECT * FROM TA_TIPO_SERVICIO
INSERT INTO TA_TIPO_SERVICIO VALUES ('EJECUTIVO')
INSERT INTO TA_TIPO_SERVICIO VALUES ('VIP')
INSERT INTO TA_TIPO_SERVICIO VALUES ('NORMAL')

-- SELECT * FROM TA_TIPOSDOCUMENTO
INSERT INTO TA_TIPOSDOCUMENTO VALUES ('DNI')
INSERT INTO TA_TIPOSDOCUMENTO VALUES ('PASAPORTE')
INSERT INTO TA_TIPOSDOCUMENTO VALUES ('OTRO')

-- SELECT * FROM TA_TIPO_TRANSPORTE
INSERT INTO TA_TIPO_TRANSPORTE VALUES ('VIAJE')
INSERT INTO TA_TIPO_TRANSPORTE VALUES ('CARGA')
INSERT INTO TA_TIPO_TRANSPORTE VALUES ('OTRO')

-- SELECT * FROM TA_VEHICULO
INSERT INTO TA_VEHICULO VALUES ('RQF876', 'MODASA','A1','ROJO',1)
INSERT INTO TA_VEHICULO VALUES ('HQF885', 'MERCEDES','A1','AZUL',1)
INSERT INTO TA_VEHICULO VALUES ('GHF896', 'AUDI','A1','PLATEADO',1)

-- SELECT * FROM TA_ESTADOASIENTO
INSERT INTO TA_ESTADOASIENTO VALUES (1,'OCUPADO')
INSERT INTO TA_ESTADOASIENTO VALUES (2,'SELECCIONADO')
INSERT INTO TA_ESTADOASIENTO VALUES (3,'LIBRE')

-- SELECT * FROM TA_TIPOETIQUETA
INSERT INTO TA_TIPOETIQUETA VALUES (1,'FRAGIL')
INSERT INTO TA_TIPOETIQUETA VALUES (2,'NORMAL')

-- SELECT * FROM TA_UBIGEO
INSERT INTO TA_UBIGEO VALUES (1,1,1,1)
INSERT INTO TA_UBIGEO VALUES (2,1,1,1)
INSERT INTO TA_UBIGEO VALUES (3,1,1,1)
INSERT INTO TA_UBIGEO VALUES (4,1,1,1)

-- SELECT * FROM TA_AGENCIA 
INSERT INTO TA_AGENCIA VALUES ('LIMA','AV. GRAU 1254 - CERCADO DE LIMA',1)
INSERT INTO TA_AGENCIA VALUES ('PIURA','AV. SAN SIMON 524 - CASTILLA',2)
INSERT INTO TA_AGENCIA VALUES ('AREQUIPA','AV. BOLIVAR 1477 - AREQUIPA',3)
INSERT INTO TA_AGENCIA VALUES ('CUZCO','AV. GARCILAZO 666 - CUZCO',4)

-- SELECT * FROM TA_RUTA
INSERT INTO TA_RUTA VALUES (1,2,1)
INSERT INTO TA_RUTA VALUES (1,3,1)
INSERT INTO TA_RUTA VALUES (1,4,1)

-- SELECT * FROM TA_ASIENTOVEHICULO
INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(MINUTE,25,GETDATE()),114),'01',1)
INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(MINUTE,15,GETDATE()),114),'02',2)
INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(HOUR,-5,GETDATE()),114),'03',2)
INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),114),'04',3)
INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),114),'05',3)
--INSERT INTO TA_ASIENTOVEHICULO VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),114),'06',2)

-- SELECT * FROM TA_PERSONA
INSERT INTO TA_PERSONA VALUES (1,1,58524558,'PEPE','RAMOS','VALDEZ','01/02/1980','','AV. PERU 1251','256-2564','M',1,1,1)
INSERT INTO TA_PERSONA VALUES (2,1,98562525,'JUAN','PEREZ','PEREZ','01/02/1980','','AV. SAN BORJA NORTE 25','283-2525','M',1,1,1)
INSERT INTO TA_PERSONA VALUES (3,1,78585821,'CARLOS','BANCES','TORO','01/02/1980','','AV. AVIACION 1548','485-2536','M',1,1,1)
INSERT INTO TA_PERSONA VALUES (4,1,58524558,'PEDRO','ROA','ROA','01/02/1970','','AV.CANADA 121','289-2564','M',2,1,1)
INSERT INTO TA_PERSONA VALUES (5,1,58524558,'ENRIQUE','RAMOS','VERA','01/02/1970','','JR. PUNO 12511','226-2854','M',2,1,1)
INSERT INTO TA_PERSONA VALUES (6,1,58524558,'FRANKO','CORDOVA','DONES','01/02/1970','','CALLE LAS BEGONIAS 215','286-3564','M',2,1,1)

-- SELECT * FROM TA_PROGRAMACION_RUTA
INSERT INTO TA_PROGRAMACION_RUTA VALUES (1,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(varchar(10),DATEADD(HOUR,1,GETDATE()),114),CONVERT(varchar(10),DATEADD(HOUR,2,GETDATE()),114),1,1,4,1)
INSERT INTO TA_PROGRAMACION_RUTA VALUES (2,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(varchar(10),DATEADD(HOUR,1,GETDATE()),114),CONVERT(varchar(10),DATEADD(HOUR,2,GETDATE()),114),1,1,5,1)
INSERT INTO TA_PROGRAMACION_RUTA VALUES (3,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(varchar(10),DATEADD(HOUR,1,GETDATE()),114),CONVERT(varchar(10),DATEADD(HOUR,2,GETDATE()),114),1,1,6,1)

-- SELECT * FROM TA_PASAJERO
INSERT INTO TA_PASAJERO VALUES (1,1,'32',1)
INSERT INTO TA_PASAJERO VALUES (2,2,'39',1)
INSERT INTO TA_PASAJERO VALUES (3,3,'35',1)

-- SELECT * FROM TA_BOLETO
INSERT INTO TA_BOLETO VALUES (1,1,1,'001-000001',60,Null,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(MINUTE,25,GETDATE()),114),'01','SEGUNDO PISO','',1)
INSERT INTO TA_BOLETO VALUES (2,1,1,'001-000002',60,Null,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(MINUTE,15,GETDATE()),114),'02','SEGUNDO PISO','',1)
INSERT INTO TA_BOLETO VALUES (3,1,1,'001-000003',60,Null,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),DATEADD(HOUR,-5,GETDATE()),114),'03','SEGUNDO PISO','',1)
INSERT INTO TA_BOLETO VALUES (4,1,1,'001-000004',60,Null,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),114),'04','SEGUNDO PISO','',1)
INSERT INTO TA_BOLETO VALUES (5,1,1,'001-000005',60,Null,CONVERT(VARCHAR(10),GETDATE(),103),CONVERT(VARCHAR(10),GETDATE(),114),'05','SEGUNDO PISO','',1)

-- SELECT * FROM TA_EQUIPAJE
/*
INSERT INTO TA_EQUIPAJE VALUES (1,2,'001-01000',GETDATE(),'',74.00,'2x1',20.00,'BODEGA','0101010101010100','CONFIRMADO',1)
INSERT INTO TA_EQUIPAJE VALUES (2,1,'001-01001',GETDATE(),'',60.00,'2x2',20.00,'BODEGA','0101010101010100','CONFIRMADO',1)
INSERT INTO TA_EQUIPAJE VALUES (3,1,'001-01002',GETDATE(),'',90.00,'2x2',60.00,'BODEGA','0101010101010100','POR CONFIRMAR',1)
INSERT INTO TA_EQUIPAJE VALUES (4,1,'001-01003',GETDATE(),'',90.00,'2x2',60.00,'BODEGA','0101010101010100','POR CONFIRMAR',1)
INSERT INTO TA_EQUIPAJE VALUES (5,1,'001-01004',GETDATE(),'',90.00,'2x2',60.00,'BODEGA','0101010101010100','POR CONFIRMAR',1)
*/

-- SELECT * FROM TA_SOLICITUDFILMACION
/*
INSERT INTO [CSUR].[dbo].[TA_SOLICITUDFILMACION]
           ([CODIGO_SALIDA_BUS]
           ,[INICIO_GRABACION]
           ,[FINAL_GRABACION]
           ,[RUTA_VIDEO]
           ,[ESTADO])
     VALUES
           (7,'08/09/2014 01:13:22','11/09/2014 01:13:00','Videos/Bus_1_11/09/2014 01:13:00','A')
*/

UPDATE TA_EQUIPAJE set DTE_FECHAVERIFICACION = null 

insert into TA_SOLICITUDFILMACION values(2,'30','Videos/Bus2_30','A')
-----------------------------------------------------------------------------------------------------------------------

-- DATOS PARA CONSULTAR


-- DNI: 58524558
-- BOLERO: 001-000001
-- EXEC SP_INSERTA_DATA_CHECKIN
GO
/****** Object:  StoredProcedure [dbo].[SP_GENERARREPORTEDETALLE]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_GENERARREPORTEDETALLE]
@INT_CODIGO_ALMACEN  INT,
@INT_TIPO_MOVIMIENTO INT,
@DTM_FECHAHORAINICIO DATETIME,
@DTM_FECHAHORAFIN DATETIME
AS
SELECT  A.INT_CODIGO_CARGA ,
        VCH_FICHA ,
        DTM_FECHA_REGISTRO ,
        VCH_REMITENTE ,
        VCH_DESTINATARIO ,
        DBL_PESOTOTAL ,
        DBL_IMPORTETOTAL ,
        DBL_IGV ,
        DBL_TOTAL ,
        A.VCH_OBSERVACION ,
        VCH_CLAVE_SEGURIDAD ,
        INT_TIPO_PAGO ,
        B.INT_CODIGO_PROGRAMACION_RUTA ,
        VCH_CLIENTE_ORIGEN ,
        VCH_ESTADOPAGO ,
        VCH_CLIENTE_DESTINO ,
        VCH_ESTADO ,
		ao.VCH_NOMBRE AS VCH_ORIGEN,
		ad.VCH_NOMBRE AS VCH_DESTINO,
		B.DTM_FECHA_ORIGEN,
		B.DTM_FECHA_DESTINO,
		DA.VCH_DESCRIPCION,
		DA.INT_CANTIDAD,
		DA.DBL_PESO,
		DA.DBL_IMPORTE
FROM dbo.TA_CARGA A
INNER JOIN dbo.TA_DETALLECARGA DA
ON DA.INT_CODIGO_CARGA = A.INT_CODIGO_CARGA
INNER JOIN dbo.TA_PROGRAMACION_RUTA B
ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
INNER JOIN dbo.TA_RUTA C
ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
INNER JOIN dbo.TA_AGENCIA AO
ON AO.INT_CODIGO_AGENCIA = C.INT_CODIGO_AGENCIAORIGEN
INNER JOIN dbo.TA_AGENCIA AD
ON AD.INT_CODIGO_AGENCIA = C.INT_CODIGO_AGENCIADESTINO
INNER JOIN dbo.TA_FICHA_MOVIMIENTO MV
ON MV.INT_CODIGO_CARGA = A.INT_CODIGO_CARGA
WHERE MV.INT_TIPO_MOVIMIENTO=@INT_TIPO_MOVIMIENTO AND
		MV.INT_CODIGO_ALMACEN=@INT_CODIGO_ALMACEN  AND
		MV.DTM_FECHAHORA BETWEEN @DTM_FECHAHORAINICIO AND @DTM_FECHAHORAFIN
GO
/****** Object:  StoredProcedure [dbo].[SP_GENERARREPORTE]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_GENERARREPORTE]
@INT_CODIGO_ALMACEN  INT,
@INT_TIPO_MOVIMIENTO INT,
@DTM_FECHAHORAINICIO DATETIME,
@DTM_FECHAHORAFIN DATETIME
AS
SELECT  A.INT_CODIGO_CARGA ,
        VCH_FICHA ,
        DTM_FECHA_REGISTRO ,
        VCH_REMITENTE ,
        VCH_DESTINATARIO ,
        DBL_PESOTOTAL ,
        DBL_IMPORTETOTAL ,
        DBL_IGV ,
        DBL_TOTAL ,
        A.VCH_OBSERVACION ,
        VCH_CLAVE_SEGURIDAD ,
        INT_TIPO_PAGO ,
        B.INT_CODIGO_PROGRAMACION_RUTA ,
        VCH_CLIENTE_ORIGEN ,
        VCH_ESTADOPAGO ,
        VCH_CLIENTE_DESTINO ,
        VCH_ESTADO ,
		ao.VCH_NOMBRE AS VCH_ORIGEN,
		ad.VCH_NOMBRE AS VCH_DESTINO,
		B.DTM_FECHA_ORIGEN,
		B.DTM_FECHA_DESTINO
FROM dbo.TA_CARGA A
INNER JOIN dbo.TA_PROGRAMACION_RUTA B
ON B.INT_CODIGO_PROGRAMACION_RUTA = A.INT_CODIGO_PROGRAMACION_RUTA
INNER JOIN dbo.TA_RUTA C
ON C.INT_CODIGO_RUTA = B.INT_CODIGO_RUTA
INNER JOIN dbo.TA_AGENCIA AO
ON AO.INT_CODIGO_AGENCIA = C.INT_CODIGO_AGENCIAORIGEN
INNER JOIN dbo.TA_AGENCIA AD
ON AD.INT_CODIGO_AGENCIA = C.INT_CODIGO_AGENCIADESTINO
INNER JOIN dbo.TA_FICHA_MOVIMIENTO MV
ON MV.INT_CODIGO_CARGA = A.INT_CODIGO_CARGA
WHERE MV.INT_TIPO_MOVIMIENTO=@INT_TIPO_MOVIMIENTO AND
		MV.INT_CODIGO_ALMACEN=@INT_CODIGO_ALMACEN  AND
		MV.DTM_FECHAHORA BETWEEN @DTM_FECHAHORAINICIO AND @DTM_FECHAHORAFIN
GO
/****** Object:  StoredProcedure [dbo].[SP_INSERTARTIKET]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[SP_INSERTARTIKET]
(
@codigoBoleto AS int,
@codigoEtiqueta AS int,
@nroEquipaje char(10),
@peso decimal(12,2),
@tamaño char(20),
@precio decimal(12,2),
@ubicacion varchar(20),
@codigoBarra varchar(20),
@estado varchar(20),
@bln_activo bit

)
AS 
BEGIN


INSERT INTO TA_EQUIPAJE
           (INT_CODIGOBOLETO
           ,INT_CODIGOETIQUETA
           ,CHR_NUMEROEQUIPAJE
           ,DTE_FECHAHORA
           ,DTE_FECHAVERIFICACION
           ,DEC_PESO
           ,CHR_TAMANO
           ,DEC_PRECIO
           ,VCH_UBICACION
           ,CHR_CODIGOBARRAS
           ,VCH_ESTADOEQUIPAJE
           ,BLN_ACTIVO)
     VALUES
           (
           @codigoBoleto,
@codigoEtiqueta ,
@nroEquipaje ,
GETDATE(),
GETDATE(),
@peso ,
@tamaño ,
@precio ,
@ubicacion ,
@codigoBarra ,
@estado ,
@bln_activo )





END
GO
/****** Object:  Table [dbo].[TA_GUIASALIDAINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_GUIASALIDAINSUMO](
	[INT_CODIGO_GUIASALIDAINSUMO] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_SOLICITUDINSUMO] [int] NOT NULL,
	[DTE_FECHA_GUIA] [smalldatetime] NOT NULL,
	[TIN_ESTADO] [tinyint] NOT NULL,
 CONSTRAINT [PK_GUIASALIDAINSUMO] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_GUIASALIDAINSUMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_DETALLEGUIAREMISION]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_DETALLEGUIAREMISION](
	[INT_CODIGO_GUIA] [int] NOT NULL,
	[INT_CODIGO_DETALLE_GUIA] [int] NOT NULL,
	[INT_CODIGO_CARGA] [int] NOT NULL,
 CONSTRAINT [PK_TA_DETALLEGUIAREMISION_1] PRIMARY KEY CLUSTERED 
(
	[INT_CODIGO_GUIA] ASC,
	[INT_CODIGO_DETALLE_GUIA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_DET_SOLICITUDINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_DET_SOLICITUDINSUMO](
	[INT_TA_DET_SOLICITUDINSUMO] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_SOLICITUDINSUMO] [int] NOT NULL,
	[INT_CODIGO_INSUMO] [int] NOT NULL,
	[INT_CANTIDAD] [int] NULL,
	[VCH_UNIDAD] [nvarchar](10) NOT NULL,
 CONSTRAINT [PK_TA_DET_SOLICITUDINSUMO] PRIMARY KEY CLUSTERED 
(
	[INT_TA_DET_SOLICITUDINSUMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TA_DET_GUIASALIDAINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TA_DET_GUIASALIDAINSUMO](
	[INT_DET_GUIASALIDAINSUMO] [int] IDENTITY(1,1) NOT NULL,
	[INT_CODIGO_GUIASALIDAINSUMO] [int] NOT NULL,
	[INT_CODIGO_INSUMO] [int] NOT NULL,
	[INT_CANTIDAD] [int] NULL,
	[VCH_UNIDAD] [nvarchar](10) NOT NULL,
 CONSTRAINT [PK_DET_GUIASALIDAINSUMO] PRIMARY KEY CLUSTERED 
(
	[INT_DET_GUIASALIDAINSUMO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[SP_EQUIPAJEVERIFICARESTADO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input : @pNROBOLETO - Número de Boleto
-- Output : Datos de boleto
-- Creado por : xxx
-- Fec Creación : xx
------------------------------------------------------------------------------
-- Ejecución: SP_EQUIPAJEACTUALIZARESTADO '001-000001',2
--****************************************************************************
CREATE Procedure [dbo].[SP_EQUIPAJEVERIFICARESTADO]
(
@pNROBOLETO Char(10)
)
As
Begin
Set Nocount On
-- If (@pAccion=1) Set @Estado='POR CONFIRMAR'
Update a
Set a.DTE_FECHAVERIFICACION = GETDATE()
From TA_EQUIPAJE (Nolock) a
Inner Join TA_BOLETO b On a.INT_CODIGOBOLETO = b.INT_CODIGOBOLETO And b.BLN_ACTIVO = 1
Where b.CHR_NUMEROBOLETO = @pNROBOLETO
exec SP_EQUIPAJEVERIFICAR @pNROBOLETO,Null
Set Nocount Off
End
GO
/****** Object:  StoredProcedure [dbo].[SP_EQUIPAJEACTUALIZARESTADO]    Script Date: 10/05/2014 23:20:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--****************************************************************************
-- Valida los datos del usuario para el ingreso
-- Input             : @pNROBOLETO - Número de Boleto
-- Output            : Datos de boleto
-- Creado por        : xxx
-- Fec Creación      : xx              
------------------------------------------------------------------------------
-- Ejecución: SP_EQUIPAJEACTUALIZARESTADO '001-000001',2
--****************************************************************************
CREATE Procedure [dbo].[SP_EQUIPAJEACTUALIZARESTADO]
(
   @pNROBOLETO Char(10),
   @pAccion Int
)
As
Begin
   Set Nocount On
   Declare @Estado varchar(20)
   
   -- If (@pAccion=1) Set @Estado='POR CONFIRMAR'   
   If (@pAccion=2) 
   Begin
      Set @Estado='CONFIRMADO'
      Update a
      Set a.VCH_ESTADOEQUIPAJE = @Estado
      From TA_EQUIPAJE (Nolock)       a
      Inner Join TA_BOLETO b On a.INT_CODIGOBOLETO     = b.INT_CODIGOBOLETO And b.BLN_ACTIVO = 1
      Where b.CHR_NUMEROBOLETO = @pNROBOLETO 
   End
   If (@pAccion=3) 
   Begin 
      Set @Estado='CANCELADO'
      Update a
      Set a.VCH_ESTADOEQUIPAJE = @Estado,
          a.INT_CODIGOBOLETO   = Null
      From TA_EQUIPAJE (Nolock)       a
      Inner Join TA_BOLETO b On a.INT_CODIGOBOLETO     = b.INT_CODIGOBOLETO And b.BLN_ACTIVO = 1
      Where b.CHR_NUMEROBOLETO = @pNROBOLETO 
   End
     
   exec  SP_EQUIPAJECONSULTAR @pNROBOLETO,Null
   
   Set Nocount Off
End
GO
/****** Object:  Default [DF__TA_EQUIPA__BLN_A__6754599E]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EQUIPAJE] ADD  CONSTRAINT [DF__TA_EQUIPA__BLN_A__6754599E]  DEFAULT ((1)) FOR [BLN_ACTIVO]
GO
/****** Object:  Default [DF__TA_PASAJE__BLN_A__1CBC4616]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PASAJERO] ADD  DEFAULT ((1)) FOR [BLN_ACTIVO]
GO
/****** Object:  Default [DF__TA_PERSON__BLN_A__4BAC3F29]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PERSONA] ADD  CONSTRAINT [DF__TA_PERSON__BLN_A__4BAC3F29]  DEFAULT ((1)) FOR [BLN_ACTIVO]
GO
/****** Object:  ForeignKey [FK_TA_AGENCIA_TA_UBIGEO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_AGENCIA]  WITH CHECK ADD  CONSTRAINT [FK_TA_AGENCIA_TA_UBIGEO] FOREIGN KEY([VCH_UBIGEO_DIRECCION])
REFERENCES [dbo].[TA_UBIGEO] ([VCH_CODIGO_UBIGEO])
GO
ALTER TABLE [dbo].[TA_AGENCIA] CHECK CONSTRAINT [FK_TA_AGENCIA_TA_UBIGEO]
GO
/****** Object:  ForeignKey [FK_TA_ALMACEN_TA_AGENCIA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_ALMACEN]  WITH CHECK ADD  CONSTRAINT [FK_TA_ALMACEN_TA_AGENCIA] FOREIGN KEY([INT_CODIGO_AGENCIA])
REFERENCES [dbo].[TA_AGENCIA] ([INT_CODIGO_AGENCIA])
GO
ALTER TABLE [dbo].[TA_ALMACEN] CHECK CONSTRAINT [FK_TA_ALMACEN_TA_AGENCIA]
GO
/****** Object:  ForeignKey [FK_TA_ASIEN_REFERENCE_TA_ESTAD]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_ASIENTOVEHICULO]  WITH CHECK ADD  CONSTRAINT [FK_TA_ASIEN_REFERENCE_TA_ESTAD] FOREIGN KEY([INT_CODIGOESTASIENTO])
REFERENCES [dbo].[TA_ESTADOASIENTO] ([INT_CODIGOESTASIENTO])
GO
ALTER TABLE [dbo].[TA_ASIENTOVEHICULO] CHECK CONSTRAINT [FK_TA_ASIEN_REFERENCE_TA_ESTAD]
GO
/****** Object:  ForeignKey [FK_TA_ASIEN_REFERENCE_TA_VEHIC]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_ASIENTOVEHICULO]  WITH CHECK ADD  CONSTRAINT [FK_TA_ASIEN_REFERENCE_TA_VEHIC] FOREIGN KEY([INT_VEHICULO])
REFERENCES [dbo].[TA_VEHICULO] ([INT_VEHICULO])
GO
ALTER TABLE [dbo].[TA_ASIENTOVEHICULO] CHECK CONSTRAINT [FK_TA_ASIEN_REFERENCE_TA_VEHIC]
GO
/****** Object:  ForeignKey [FK_TA_BOLETO_TA_PASAJERO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_BOLETO]  WITH CHECK ADD  CONSTRAINT [FK_TA_BOLETO_TA_PASAJERO] FOREIGN KEY([INT_CODIGOPASAJERO])
REFERENCES [dbo].[TA_PASAJERO] ([INT_CODIGOPASAJERO])
GO
ALTER TABLE [dbo].[TA_BOLETO] CHECK CONSTRAINT [FK_TA_BOLETO_TA_PASAJERO]
GO
/****** Object:  ForeignKey [FK_TA_BOLETO_TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_BOLETO]  WITH CHECK ADD  CONSTRAINT [FK_TA_BOLETO_TA_PROGRAMACION_RUTA] FOREIGN KEY([INT_CODIGO_PROGRAMACION_RUTA])
REFERENCES [dbo].[TA_PROGRAMACION_RUTA] ([INT_CODIGO_PROGRAMACION_RUTA])
GO
ALTER TABLE [dbo].[TA_BOLETO] CHECK CONSTRAINT [FK_TA_BOLETO_TA_PROGRAMACION_RUTA]
GO
/****** Object:  ForeignKey [FK_TA_CARGA_TA_CLIENTE]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_CARGA_TA_CLIENTE] FOREIGN KEY([VCH_CLIENTE_ORIGEN])
REFERENCES [dbo].[TA_CLIENTE] ([VCH_DOCUMENTO])
GO
ALTER TABLE [dbo].[TA_CARGA] CHECK CONSTRAINT [FK_TA_CARGA_TA_CLIENTE]
GO
/****** Object:  ForeignKey [FK_TA_CARGA_TA_CLIENTE1]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_CARGA_TA_CLIENTE1] FOREIGN KEY([VCH_CLIENTE_DESTINO])
REFERENCES [dbo].[TA_CLIENTE] ([VCH_DOCUMENTO])
GO
ALTER TABLE [dbo].[TA_CARGA] CHECK CONSTRAINT [FK_TA_CARGA_TA_CLIENTE1]
GO
/****** Object:  ForeignKey [FK_TA_CARGA_TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_CARGA_TA_PROGRAMACION_RUTA] FOREIGN KEY([INT_CODIGO_PROGRAMACION_RUTA])
REFERENCES [dbo].[TA_PROGRAMACION_RUTA] ([INT_CODIGO_PROGRAMACION_RUTA])
GO
ALTER TABLE [dbo].[TA_CARGA] CHECK CONSTRAINT [FK_TA_CARGA_TA_PROGRAMACION_RUTA]
GO
/****** Object:  ForeignKey [FK_TA_CARGA_TA_TIPO_PAGO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_CARGA_TA_TIPO_PAGO] FOREIGN KEY([INT_TIPO_PAGO])
REFERENCES [dbo].[TA_TIPO_PAGO] ([INT_TIPO_PAGO])
GO
ALTER TABLE [dbo].[TA_CARGA] CHECK CONSTRAINT [FK_TA_CARGA_TA_TIPO_PAGO]
GO
/****** Object:  ForeignKey [FK_dbo.TA_CARGOS_dbo.TA_AREAS_INT_CODIGOAREA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGOS]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_CARGOS_dbo.TA_AREAS_INT_CODIGOAREA] FOREIGN KEY([INT_CODIGOAREA])
REFERENCES [dbo].[TA_AREAS] ([INT_CODIGOAREA])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_CARGOS] CHECK CONSTRAINT [FK_dbo.TA_CARGOS_dbo.TA_AREAS_INT_CODIGOAREA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_AREAS_INT_CODIGOAREA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_AREAS_INT_CODIGOAREA] FOREIGN KEY([INT_CODIGOAREA])
REFERENCES [dbo].[TA_AREAS] ([INT_CODIGOAREA])
GO
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS] CHECK CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_AREAS_INT_CODIGOAREA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_CARGOS_INT_CODIGOCARGO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_CARGOS_INT_CODIGOCARGO] FOREIGN KEY([INT_CODIGOCARGO])
REFERENCES [dbo].[TA_CARGOS] ([INT_CODIGOCARGO])
GO
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS] CHECK CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_CARGOS_INT_CODIGOCARGO]
GO
/****** Object:  ForeignKey [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_PERSONAS_INT_CODIGOPERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_PERSONAS_INT_CODIGOPERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONAS] ([INT_CODIGOPERSONA])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_CARGOSDESEMPENADOS] CHECK CONSTRAINT [FK_dbo.TA_CARGOSDESEMPENADOS_dbo.TA_PERSONAS_INT_CODIGOPERSONA]
GO
/****** Object:  ForeignKey [FK_TA_CLIENTE_TA_UBIGEO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_CLIENTE]  WITH CHECK ADD  CONSTRAINT [FK_TA_CLIENTE_TA_UBIGEO] FOREIGN KEY([VCH_UBIGEO])
REFERENCES [dbo].[TA_UBIGEO] ([VCH_CODIGO_UBIGEO])
GO
ALTER TABLE [dbo].[TA_CLIENTE] CHECK CONSTRAINT [FK_TA_CLIENTE_TA_UBIGEO]
GO
/****** Object:  ForeignKey [FK_TA_DET_GUIASALIDAINSUMO_TA_GUIASALIDAINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DET_GUIASALIDAINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_DET_GUIASALIDAINSUMO_TA_GUIASALIDAINSUMO] FOREIGN KEY([INT_CODIGO_GUIASALIDAINSUMO])
REFERENCES [dbo].[TA_GUIASALIDAINSUMO] ([INT_CODIGO_GUIASALIDAINSUMO])
GO
ALTER TABLE [dbo].[TA_DET_GUIASALIDAINSUMO] CHECK CONSTRAINT [FK_TA_DET_GUIASALIDAINSUMO_TA_GUIASALIDAINSUMO]
GO
/****** Object:  ForeignKey [FK_TA_DET_GUIASALIDAINSUMO_TA_INSUMO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DET_GUIASALIDAINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_DET_GUIASALIDAINSUMO_TA_INSUMO] FOREIGN KEY([INT_CODIGO_INSUMO])
REFERENCES [dbo].[TA_INSUMO] ([INT_CODIGO_INSUMO])
GO
ALTER TABLE [dbo].[TA_DET_GUIASALIDAINSUMO] CHECK CONSTRAINT [FK_TA_DET_GUIASALIDAINSUMO_TA_INSUMO]
GO
/****** Object:  ForeignKey [FK_TA_DET_SOLICITUDINSUMO_TA_INSUMO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DET_SOLICITUDINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_DET_SOLICITUDINSUMO_TA_INSUMO] FOREIGN KEY([INT_CODIGO_INSUMO])
REFERENCES [dbo].[TA_INSUMO] ([INT_CODIGO_INSUMO])
GO
ALTER TABLE [dbo].[TA_DET_SOLICITUDINSUMO] CHECK CONSTRAINT [FK_TA_DET_SOLICITUDINSUMO_TA_INSUMO]
GO
/****** Object:  ForeignKey [FK_TA_DET_SOLICITUDINSUMO_TA_SOLICITUDINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DET_SOLICITUDINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_DET_SOLICITUDINSUMO_TA_SOLICITUDINSUMO] FOREIGN KEY([INT_CODIGO_SOLICITUDINSUMO])
REFERENCES [dbo].[TA_SOLICITUDINSUMO] ([INT_CODIGO_SOLICITUDINSUMO])
GO
ALTER TABLE [dbo].[TA_DET_SOLICITUDINSUMO] CHECK CONSTRAINT [FK_TA_DET_SOLICITUDINSUMO_TA_SOLICITUDINSUMO]
GO
/****** Object:  ForeignKey [FK_TA_DETALLECARGA_TA_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLECARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_DETALLECARGA_TA_CARGA] FOREIGN KEY([INT_CODIGO_CARGA])
REFERENCES [dbo].[TA_CARGA] ([INT_CODIGO_CARGA])
GO
ALTER TABLE [dbo].[TA_DETALLECARGA] CHECK CONSTRAINT [FK_TA_DETALLECARGA_TA_CARGA]
GO
/****** Object:  ForeignKey [FK_TA_DETALLECARGA_TA_PRODUCTO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLECARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_DETALLECARGA_TA_PRODUCTO] FOREIGN KEY([INT_CODIGO_PRODUCTO])
REFERENCES [dbo].[TA_PRODUCTO] ([INT_CODIGO_PRODUCTO])
GO
ALTER TABLE [dbo].[TA_DETALLECARGA] CHECK CONSTRAINT [FK_TA_DETALLECARGA_TA_PRODUCTO]
GO
/****** Object:  ForeignKey [FK_TA_DETALLECARGA_TA_TIPO_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLECARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_DETALLECARGA_TA_TIPO_CARGA] FOREIGN KEY([INT_TIPO_CARGA])
REFERENCES [dbo].[TA_TIPO_CARGA] ([INT_TIPO_CARGA])
GO
ALTER TABLE [dbo].[TA_DETALLECARGA] CHECK CONSTRAINT [FK_TA_DETALLECARGA_TA_TIPO_CARGA]
GO
/****** Object:  ForeignKey [FK_TA_DETALLEGUIAREMISION_TA_FICHA_MOVIMIENTO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLEGUIAREMISION]  WITH CHECK ADD  CONSTRAINT [FK_TA_DETALLEGUIAREMISION_TA_FICHA_MOVIMIENTO] FOREIGN KEY([INT_CODIGO_CARGA])
REFERENCES [dbo].[TA_FICHA_MOVIMIENTO] ([INT_CODIGO_MOVIMIENTO])
GO
ALTER TABLE [dbo].[TA_DETALLEGUIAREMISION] CHECK CONSTRAINT [FK_TA_DETALLEGUIAREMISION_TA_FICHA_MOVIMIENTO]
GO
/****** Object:  ForeignKey [FK_TA_DETALLEGUIAREMISION_TA_GUIAREMISION]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLEGUIAREMISION]  WITH CHECK ADD  CONSTRAINT [FK_TA_DETALLEGUIAREMISION_TA_GUIAREMISION] FOREIGN KEY([INT_CODIGO_GUIA])
REFERENCES [dbo].[TA_GUIAREMISION] ([INT_CODIGO_GUIA])
GO
ALTER TABLE [dbo].[TA_DETALLEGUIAREMISION] CHECK CONSTRAINT [FK_TA_DETALLEGUIAREMISION_TA_GUIAREMISION]
GO
/****** Object:  ForeignKey [FK_dbo.TA_DETALLESHOJAVIDA_dbo.TA_PERSONAS_INT_CODIGOPERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_DETALLESHOJAVIDA]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_DETALLESHOJAVIDA_dbo.TA_PERSONAS_INT_CODIGOPERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONAS] ([INT_CODIGOPERSONA])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_DETALLESHOJAVIDA] CHECK CONSTRAINT [FK_dbo.TA_DETALLESHOJAVIDA_dbo.TA_PERSONAS_INT_CODIGOPERSONA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_EDUCACIONES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EDUCACIONES]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_EDUCACIONES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA] FOREIGN KEY([INT_CODIGODETALLEHOJAVIDA])
REFERENCES [dbo].[TA_DETALLESHOJAVIDA] ([INT_CODIGODETALLEHOJAVIDA])
GO
ALTER TABLE [dbo].[TA_EDUCACIONES] CHECK CONSTRAINT [FK_dbo.TA_EDUCACIONES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_EDUCACIONES_dbo.TA_TIPOSEDUCACION_INT_CODIGOEDUCACION]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EDUCACIONES]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_EDUCACIONES_dbo.TA_TIPOSEDUCACION_INT_CODIGOEDUCACION] FOREIGN KEY([INT_CODIGOEDUCACION])
REFERENCES [dbo].[TA_TIPOSEDUCACION] ([INT_CODIGOTIPOEDUCACION])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_EDUCACIONES] CHECK CONSTRAINT [FK_dbo.TA_EDUCACIONES_dbo.TA_TIPOSEDUCACION_INT_CODIGOEDUCACION]
GO
/****** Object:  ForeignKey [FK_TA_EQUIPAJE_TA_BOLETO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EQUIPAJE]  WITH CHECK ADD  CONSTRAINT [FK_TA_EQUIPAJE_TA_BOLETO] FOREIGN KEY([INT_CODIGOBOLETO])
REFERENCES [dbo].[TA_BOLETO] ([INT_CODIGOBOLETO])
GO
ALTER TABLE [dbo].[TA_EQUIPAJE] CHECK CONSTRAINT [FK_TA_EQUIPAJE_TA_BOLETO]
GO
/****** Object:  ForeignKey [FK_TA_EQUIPAJE_TA_TIPOETIQUETA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EQUIPAJE]  WITH CHECK ADD  CONSTRAINT [FK_TA_EQUIPAJE_TA_TIPOETIQUETA] FOREIGN KEY([INT_CODIGOETIQUETA])
REFERENCES [dbo].[TA_TIPOETIQUETA] ([INT_CODIGOETIQUETA])
GO
ALTER TABLE [dbo].[TA_EQUIPAJE] CHECK CONSTRAINT [FK_TA_EQUIPAJE_TA_TIPOETIQUETA]
GO
/****** Object:  ForeignKey [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EVALUACION_DESEMPENO]  WITH CHECK ADD  CONSTRAINT [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONA] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_EVALUACION_DESEMPENO] CHECK CONSTRAINT [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA]
GO
/****** Object:  ForeignKey [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA1]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EVALUACION_DESEMPENO]  WITH CHECK ADD  CONSTRAINT [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA1] FOREIGN KEY([INT_CODIGOEVALUADO])
REFERENCES [dbo].[TA_PERSONA] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_EVALUACION_DESEMPENO] CHECK CONSTRAINT [FK_TA_EVALUACION_DESEMPENO_TA_PERSONA1]
GO
/****** Object:  ForeignKey [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EVALUACIONESDESEMPENO]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADO] FOREIGN KEY([INT_CODIGOEVALUADO])
REFERENCES [dbo].[TA_PERSONAS] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_EVALUACIONESDESEMPENO] CHECK CONSTRAINT [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADO]
GO
/****** Object:  ForeignKey [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADOR]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EVALUACIONESDESEMPENO]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADOR] FOREIGN KEY([INT_CODIGOEVALUADOR])
REFERENCES [dbo].[TA_PERSONAS] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_EVALUACIONESDESEMPENO] CHECK CONSTRAINT [FK_dbo.TA_EVALUACIONESDESEMPENO_dbo.TA_PERSONAS_INT_CODIGOEVALUADOR]
GO
/****** Object:  ForeignKey [FK_dbo.TA_EXPERIENCIASLABORALES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_EXPERIENCIASLABORALES]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_EXPERIENCIASLABORALES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA] FOREIGN KEY([INT_CODIGODETALLEHOJAVIDA])
REFERENCES [dbo].[TA_DETALLESHOJAVIDA] ([INT_CODIGODETALLEHOJAVIDA])
GO
ALTER TABLE [dbo].[TA_EXPERIENCIASLABORALES] CHECK CONSTRAINT [FK_dbo.TA_EXPERIENCIASLABORALES_dbo.TA_DETALLESHOJAVIDA_INT_CODIGODETALLEHOJAVIDA]
GO
/****** Object:  ForeignKey [FK_TA_FICHA_MOVIMIENTO_TA_ALMACEN]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO]  WITH CHECK ADD  CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_ALMACEN] FOREIGN KEY([INT_CODIGO_ALMACEN])
REFERENCES [dbo].[TA_ALMACEN] ([INT_CODIGO_ALMACEN])
GO
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO] CHECK CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_ALMACEN]
GO
/****** Object:  ForeignKey [FK_TA_FICHA_MOVIMIENTO_TA_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO]  WITH CHECK ADD  CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_CARGA] FOREIGN KEY([INT_CODIGO_CARGA])
REFERENCES [dbo].[TA_CARGA] ([INT_CODIGO_CARGA])
GO
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO] CHECK CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_CARGA]
GO
/****** Object:  ForeignKey [FK_TA_FICHA_MOVIMIENTO_TA_TIPO_MOVIMIENTO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO]  WITH CHECK ADD  CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_TIPO_MOVIMIENTO] FOREIGN KEY([INT_TIPO_MOVIMIENTO])
REFERENCES [dbo].[TA_TIPO_MOVIMIENTO] ([INT_TIPO_MOVIMIENTO])
GO
ALTER TABLE [dbo].[TA_FICHA_MOVIMIENTO] CHECK CONSTRAINT [FK_TA_FICHA_MOVIMIENTO_TA_TIPO_MOVIMIENTO]
GO
/****** Object:  ForeignKey [FK_TA_GUIAREMISION_TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_GUIAREMISION]  WITH CHECK ADD  CONSTRAINT [FK_TA_GUIAREMISION_TA_PROGRAMACION_RUTA] FOREIGN KEY([INT_CODIGO_PROGRAMACION_RUTA])
REFERENCES [dbo].[TA_PROGRAMACION_RUTA] ([INT_CODIGO_PROGRAMACION_RUTA])
GO
ALTER TABLE [dbo].[TA_GUIAREMISION] CHECK CONSTRAINT [FK_TA_GUIAREMISION_TA_PROGRAMACION_RUTA]
GO
/****** Object:  ForeignKey [FK_TA_GUIASALIDAINSUMO_TA_SOLICITUDINSUMO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_GUIASALIDAINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_GUIASALIDAINSUMO_TA_SOLICITUDINSUMO] FOREIGN KEY([INT_CODIGO_SOLICITUDINSUMO])
REFERENCES [dbo].[TA_SOLICITUDINSUMO] ([INT_CODIGO_SOLICITUDINSUMO])
GO
ALTER TABLE [dbo].[TA_GUIASALIDAINSUMO] CHECK CONSTRAINT [FK_TA_GUIASALIDAINSUMO_TA_SOLICITUDINSUMO]
GO
/****** Object:  ForeignKey [FK_TA_PASAJ_REFERENCE_TA_PERSO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PASAJERO]  WITH CHECK ADD  CONSTRAINT [FK_TA_PASAJ_REFERENCE_TA_PERSO] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONA] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_PASAJERO] CHECK CONSTRAINT [FK_TA_PASAJ_REFERENCE_TA_PERSO]
GO
/****** Object:  ForeignKey [FK_TA_PERSONA_TA_TIPOSDOCUMENTO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PERSONA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PERSONA_TA_TIPOSDOCUMENTO] FOREIGN KEY([INT_CODIGOTIPODOCUMENTO])
REFERENCES [dbo].[TA_TIPOSDOCUMENTO] ([INT_CODIGOTIPODOCUMENTO])
GO
ALTER TABLE [dbo].[TA_PERSONA] CHECK CONSTRAINT [FK_TA_PERSONA_TA_TIPOSDOCUMENTO]
GO
/****** Object:  ForeignKey [FK_TA_PERSONA_TA_UBIGEO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PERSONA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PERSONA_TA_UBIGEO] FOREIGN KEY([VCH_CODIGO_UBIGEO])
REFERENCES [dbo].[TA_UBIGEO] ([VCH_CODIGO_UBIGEO])
GO
ALTER TABLE [dbo].[TA_PERSONA] CHECK CONSTRAINT [FK_TA_PERSONA_TA_UBIGEO]
GO
/****** Object:  ForeignKey [FK_dbo.TA_PERSONAS_dbo.TA_TIPOSDOCUMENTO_INT_CODIGOTIPODOCUMENTO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PERSONAS]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_PERSONAS_dbo.TA_TIPOSDOCUMENTO_INT_CODIGOTIPODOCUMENTO] FOREIGN KEY([INT_CODIGOTIPODOCUMENTO])
REFERENCES [dbo].[TA_TIPOSDOCUMENTO] ([INT_CODIGOTIPODOCUMENTO])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_PERSONAS] CHECK CONSTRAINT [FK_dbo.TA_PERSONAS_dbo.TA_TIPOSDOCUMENTO_INT_CODIGOTIPODOCUMENTO]
GO
/****** Object:  ForeignKey [FK_TA_PROGRAMACION_RUTA_TA_PERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_PERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONA] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA] CHECK CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_PERSONA]
GO
/****** Object:  ForeignKey [FK_TA_PROGRAMACION_RUTA_TA_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_RUTA] FOREIGN KEY([INT_CODIGO_RUTA])
REFERENCES [dbo].[TA_RUTA] ([INT_CODIGO_RUTA])
GO
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA] CHECK CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_RUTA]
GO
/****** Object:  ForeignKey [FK_TA_PROGRAMACION_RUTA_TA_TIPO_SERVICIO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_TIPO_SERVICIO] FOREIGN KEY([INT_TIPO_SERVICIO])
REFERENCES [dbo].[TA_TIPO_SERVICIO] ([INT_CODIGOTIPOSERVICIO])
GO
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA] CHECK CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_TIPO_SERVICIO]
GO
/****** Object:  ForeignKey [FK_TA_PROGRAMACION_RUTA_TA_VEHICULO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_VEHICULO] FOREIGN KEY([INT_CODIGOVEHICULO])
REFERENCES [dbo].[TA_VEHICULO] ([INT_VEHICULO])
GO
ALTER TABLE [dbo].[TA_PROGRAMACION_RUTA] CHECK CONSTRAINT [FK_TA_PROGRAMACION_RUTA_TA_VEHICULO]
GO
/****** Object:  ForeignKey [FK_TA_RECLAMO_TA_PASAJERO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_RECLAMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_RECLAMO_TA_PASAJERO] FOREIGN KEY([INT_CODIGOPASAJERO])
REFERENCES [dbo].[TA_PASAJERO] ([INT_CODIGOPASAJERO])
GO
ALTER TABLE [dbo].[TA_RECLAMO] CHECK CONSTRAINT [FK_TA_RECLAMO_TA_PASAJERO]
GO
/****** Object:  ForeignKey [FK_TA_RUTA_TA_AGENCIA2]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_RUTA_TA_AGENCIA2] FOREIGN KEY([INT_CODIGO_AGENCIAORIGEN])
REFERENCES [dbo].[TA_AGENCIA] ([INT_CODIGO_AGENCIA])
GO
ALTER TABLE [dbo].[TA_RUTA] CHECK CONSTRAINT [FK_TA_RUTA_TA_AGENCIA2]
GO
/****** Object:  ForeignKey [FK_TA_RUTA_TA_AGENCIA3]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_RUTA]  WITH CHECK ADD  CONSTRAINT [FK_TA_RUTA_TA_AGENCIA3] FOREIGN KEY([INT_CODIGO_AGENCIADESTINO])
REFERENCES [dbo].[TA_AGENCIA] ([INT_CODIGO_AGENCIA])
GO
ALTER TABLE [dbo].[TA_RUTA] CHECK CONSTRAINT [FK_TA_RUTA_TA_AGENCIA3]
GO
/****** Object:  ForeignKey [FK_TA_SOLICITUDCOCINA_TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDCOCINA]  WITH CHECK ADD  CONSTRAINT [FK_TA_SOLICITUDCOCINA_TA_PROGRAMACION_RUTA] FOREIGN KEY([INT_CODIGO_PROGRAMACION_RUTA])
REFERENCES [dbo].[TA_PROGRAMACION_RUTA] ([INT_CODIGO_PROGRAMACION_RUTA])
GO
ALTER TABLE [dbo].[TA_SOLICITUDCOCINA] CHECK CONSTRAINT [FK_TA_SOLICITUDCOCINA_TA_PROGRAMACION_RUTA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_CAPACITACIONES_INT_CODIGOCAPACITACION]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_CAPACITACIONES_INT_CODIGOCAPACITACION] FOREIGN KEY([INT_CODIGOCAPACITACION])
REFERENCES [dbo].[TA_CAPACITACIONES] ([INT_CODIGOCAPACITACION])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_CAPACITACIONES_INT_CODIGOCAPACITACION]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_PERSONAS_INT_CODIGOPERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_PERSONAS_INT_CODIGOPERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONAS] ([INT_CODIGOPERSONA])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_PERSONAS_INT_CODIGOPERSONA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD] FOREIGN KEY([INT_CODIGOSOLICITUD])
REFERENCES [dbo].[TA_SOLICITUDES] ([INT_CODIGOSOLICITUD])
GO
ALTER TABLE [dbo].[TA_SOLICITUDESCAPACITACION] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESCAPACITACION_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_AREAS_INT_CODIGOAREA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_AREAS_INT_CODIGOAREA] FOREIGN KEY([INT_CODIGOAREA])
REFERENCES [dbo].[TA_AREAS] ([INT_CODIGOAREA])
GO
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_AREAS_INT_CODIGOAREA]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_CARGOS_INT_CODIGOCARGO]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_CARGOS_INT_CODIGOCARGO] FOREIGN KEY([INT_CODIGOCARGO])
REFERENCES [dbo].[TA_CARGOS] ([INT_CODIGOCARGO])
GO
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_CARGOS_INT_CODIGOCARGO]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD] FOREIGN KEY([INT_CODIGOSOLICITUD])
REFERENCES [dbo].[TA_SOLICITUDES] ([INT_CODIGOSOLICITUD])
GO
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_SOLICITUDES_INT_CODIGOSOLICITUD]
GO
/****** Object:  ForeignKey [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_TIPOSEDUCACION_INT_CODIGOTIPOEDUCACION]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL]  WITH CHECK ADD  CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_TIPOSEDUCACION_INT_CODIGOTIPOEDUCACION] FOREIGN KEY([INT_CODIGOTIPOEDUCACION])
REFERENCES [dbo].[TA_TIPOSEDUCACION] ([INT_CODIGOTIPOEDUCACION])
GO
ALTER TABLE [dbo].[TA_SOLICITUDESPERSONAL] CHECK CONSTRAINT [FK_dbo.TA_SOLICITUDESPERSONAL_dbo.TA_TIPOSEDUCACION_INT_CODIGOTIPOEDUCACION]
GO
/****** Object:  ForeignKey [FK_TA_SOLICITUDINSUMO_TA_SOLICITUDCOCINA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLICITUDINSUMO]  WITH CHECK ADD  CONSTRAINT [FK_TA_SOLICITUDINSUMO_TA_SOLICITUDCOCINA] FOREIGN KEY([INT_CODIGO_SOLICITUDCOCINA])
REFERENCES [dbo].[TA_SOLICITUDCOCINA] ([INT_CODIGO_SOLICITUDCOCINA])
GO
ALTER TABLE [dbo].[TA_SOLICITUDINSUMO] CHECK CONSTRAINT [FK_TA_SOLICITUDINSUMO_TA_SOLICITUDCOCINA]
GO
/****** Object:  ForeignKey [FK_TA_SOLPRODUCTODECABINA_TA_PRODUCTO_CABINA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLPRODUCTODECABINA]  WITH CHECK ADD  CONSTRAINT [FK_TA_SOLPRODUCTODECABINA_TA_PRODUCTO_CABINA] FOREIGN KEY([INT_CODIGO_PRODUCTOCABINA])
REFERENCES [dbo].[TA_PRODUCTO_CABINA] ([INT_CODIGO_PRODUCTOCABINA])
GO
ALTER TABLE [dbo].[TA_SOLPRODUCTODECABINA] CHECK CONSTRAINT [FK_TA_SOLPRODUCTODECABINA_TA_PRODUCTO_CABINA]
GO
/****** Object:  ForeignKey [FK_TA_SOLPRODUCTODECABINA_TA_PROGRAMACION_RUTA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_SOLPRODUCTODECABINA]  WITH CHECK ADD  CONSTRAINT [FK_TA_SOLPRODUCTODECABINA_TA_PROGRAMACION_RUTA] FOREIGN KEY([INT_CODIGO_PROGRAMACION_RUTA])
REFERENCES [dbo].[TA_PROGRAMACION_RUTA] ([INT_CODIGO_PROGRAMACION_RUTA])
GO
ALTER TABLE [dbo].[TA_SOLPRODUCTODECABINA] CHECK CONSTRAINT [FK_TA_SOLPRODUCTODECABINA_TA_PROGRAMACION_RUTA]
GO
/****** Object:  ForeignKey [FK_TA_STOCK_TA_ALMACEN]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_STOCK]  WITH CHECK ADD  CONSTRAINT [FK_TA_STOCK_TA_ALMACEN] FOREIGN KEY([INT_CODIGO_PRODUCTOCABINA])
REFERENCES [dbo].[TA_ALMACEN] ([INT_CODIGO_ALMACEN])
GO
ALTER TABLE [dbo].[TA_STOCK] CHECK CONSTRAINT [FK_TA_STOCK_TA_ALMACEN]
GO
/****** Object:  ForeignKey [FK_TA_STOCK_TA_PRODUCTO_CABINA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_STOCK]  WITH CHECK ADD  CONSTRAINT [FK_TA_STOCK_TA_PRODUCTO_CABINA] FOREIGN KEY([INT_CODIGO_PRODUCTOCABINA])
REFERENCES [dbo].[TA_PRODUCTO_CABINA] ([INT_CODIGO_PRODUCTOCABINA])
GO
ALTER TABLE [dbo].[TA_STOCK] CHECK CONSTRAINT [FK_TA_STOCK_TA_PRODUCTO_CABINA]
GO
/****** Object:  ForeignKey [FK_TA_TRAZABILIDADCARGA_TA_CARGA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_TRAZABILIDADCARGA]  WITH CHECK ADD  CONSTRAINT [FK_TA_TRAZABILIDADCARGA_TA_CARGA] FOREIGN KEY([INT_CODIGO_CARGA])
REFERENCES [dbo].[TA_CARGA] ([INT_CODIGO_CARGA])
GO
ALTER TABLE [dbo].[TA_TRAZABILIDADCARGA] CHECK CONSTRAINT [FK_TA_TRAZABILIDADCARGA_TA_CARGA]
GO
/****** Object:  ForeignKey [FK_TA_USUARIO_TA_PERSONA]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_USUARIO]  WITH CHECK ADD  CONSTRAINT [FK_TA_USUARIO_TA_PERSONA] FOREIGN KEY([INT_CODIGOPERSONA])
REFERENCES [dbo].[TA_PERSONA] ([INT_CODIGOPERSONA])
GO
ALTER TABLE [dbo].[TA_USUARIO] CHECK CONSTRAINT [FK_TA_USUARIO_TA_PERSONA]
GO
/****** Object:  ForeignKey [FK_TA_USUARIO_TA_ROL]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_USUARIO]  WITH CHECK ADD  CONSTRAINT [FK_TA_USUARIO_TA_ROL] FOREIGN KEY([INT_CODIGO_ROL])
REFERENCES [dbo].[TA_ROL] ([INT_CODIGO_ROL])
GO
ALTER TABLE [dbo].[TA_USUARIO] CHECK CONSTRAINT [FK_TA_USUARIO_TA_ROL]
GO
/****** Object:  ForeignKey [FK_TA_VEHICULO_TA_TIPO_TRANSPORTE1]    Script Date: 10/05/2014 23:20:22 ******/
ALTER TABLE [dbo].[TA_VEHICULO]  WITH CHECK ADD  CONSTRAINT [FK_TA_VEHICULO_TA_TIPO_TRANSPORTE1] FOREIGN KEY([INT_TIPO_TRANSPORTE])
REFERENCES [dbo].[TA_TIPO_TRANSPORTE] ([INT_TIPO_TRANSPORTE])
GO
ALTER TABLE [dbo].[TA_VEHICULO] CHECK CONSTRAINT [FK_TA_VEHICULO_TA_TIPO_TRANSPORTE1]
GO
